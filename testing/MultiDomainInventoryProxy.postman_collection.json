{
	"info": {
		"_postman_id": "b7566e7e-2382-4e0b-b1de-dab0a234fe6a",
		"name": "MultiDomainInventoryProxy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24054386",
		"_collection_link": "https://lunar-water-280038.postman.co/workspace/SDN-Workspace~8155b959-499e-42ca-9dce-ec3bffd367b8/collection/24054386-b7566e7e-2382-4e0b-b1de-dab0a234fe6a?action=share&source=collection_link&creator=24054386"
	},
	"item": [
		{
			"name": "BasicServices",
			"item": [
				{
					"name": "register-yourself",
					"item": [
						{
							"name": "Initiates registering at the currently active RegistryOffice",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/register-yourself",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"register-yourself"
									]
								},
								"description": "Shall also automatically execute without receiving any request every time the application starts"
							},
							"response": [
								{
									"name": "Will register at the RegistryOffice",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/register-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"register-yourself"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-000/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/register-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"register-yourself"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/register-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"register-yourself"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/register-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"register-yourself"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/register-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"register-yourself"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/register-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"register-yourself"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/register-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"register-yourself"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "embed-yourself",
					"item": [
						{
							"name": "Embed yourself into the MBH SDN application layer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"registry-office-application\": \"RegistryOffice\",\n  \"registry-office-application-release-number\": \"0.4.99\",\n  \"relay-server-replacement-operation\": \"<string>\",\n  \"relay-operation-update-operation\": \"<string>\",\n  \"deregistration-operation\": \"<string>\",\n  \"registry-office-protocol\": \"HTTP\",\n  \"registry-office-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"233.72.4.245\"\n    }\n  },\n  \"registry-office-port\": 3000,\n  \"old-release-protocol\": \"HTTP\",\n  \"old-release-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.233.3.250\"\n    }\n  },\n  \"old-release-port\": 12345\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/embed-yourself",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"embed-yourself"
									]
								}
							},
							"response": [
								{
									"name": "Will embed into the MBH SDN application layer",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"registry-office-application\": \"<string>\",\n  \"registry-office-application-release-number\": \"0.4.99\",\n  \"relay-server-replacement-operation\": \"<string>\",\n  \"relay-operation-update-operation\": \"<string>\",\n  \"deregistration-operation\": \"<string>\",\n  \"registry-office-protocol\": \"HTTPS\",\n  \"registry-office-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"233.72.4.245\"\n    }\n  },\n  \"registry-office-port\": \"<integer>\",\n  \"old-release-protocol\": \"HTTPS\",\n  \"old-release-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.233.3.250\"\n    }\n  },\n  \"old-release-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/embed-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"embed-yourself"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-001/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"registry-office-application\": \"<string>\",\n  \"registry-office-application-release-number\": \"0.4.99\",\n  \"relay-server-replacement-operation\": \"<string>\",\n  \"relay-operation-update-operation\": \"<string>\",\n  \"deregistration-operation\": \"<string>\",\n  \"registry-office-protocol\": \"HTTPS\",\n  \"registry-office-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"233.72.4.245\"\n    }\n  },\n  \"registry-office-port\": \"<integer>\",\n  \"old-release-protocol\": \"HTTPS\",\n  \"old-release-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.233.3.250\"\n    }\n  },\n  \"old-release-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/embed-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"embed-yourself"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"registry-office-application\": \"<string>\",\n  \"registry-office-application-release-number\": \"0.4.99\",\n  \"relay-server-replacement-operation\": \"<string>\",\n  \"relay-operation-update-operation\": \"<string>\",\n  \"deregistration-operation\": \"<string>\",\n  \"registry-office-protocol\": \"HTTPS\",\n  \"registry-office-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"233.72.4.245\"\n    }\n  },\n  \"registry-office-port\": \"<integer>\",\n  \"old-release-protocol\": \"HTTPS\",\n  \"old-release-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.233.3.250\"\n    }\n  },\n  \"old-release-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/embed-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"embed-yourself"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"registry-office-application\": \"<string>\",\n  \"registry-office-application-release-number\": \"0.4.99\",\n  \"relay-server-replacement-operation\": \"<string>\",\n  \"relay-operation-update-operation\": \"<string>\",\n  \"deregistration-operation\": \"<string>\",\n  \"registry-office-protocol\": \"HTTPS\",\n  \"registry-office-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"233.72.4.245\"\n    }\n  },\n  \"registry-office-port\": \"<integer>\",\n  \"old-release-protocol\": \"HTTPS\",\n  \"old-release-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.233.3.250\"\n    }\n  },\n  \"old-release-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/embed-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"embed-yourself"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"registry-office-application\": \"<string>\",\n  \"registry-office-application-release-number\": \"0.4.99\",\n  \"relay-server-replacement-operation\": \"<string>\",\n  \"relay-operation-update-operation\": \"<string>\",\n  \"deregistration-operation\": \"<string>\",\n  \"registry-office-protocol\": \"HTTPS\",\n  \"registry-office-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"233.72.4.245\"\n    }\n  },\n  \"registry-office-port\": \"<integer>\",\n  \"old-release-protocol\": \"HTTPS\",\n  \"old-release-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.233.3.250\"\n    }\n  },\n  \"old-release-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/embed-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"embed-yourself"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"registry-office-application\": \"<string>\",\n  \"registry-office-application-release-number\": \"0.4.99\",\n  \"relay-server-replacement-operation\": \"<string>\",\n  \"relay-operation-update-operation\": \"<string>\",\n  \"deregistration-operation\": \"<string>\",\n  \"registry-office-protocol\": \"HTTPS\",\n  \"registry-office-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"233.72.4.245\"\n    }\n  },\n  \"registry-office-port\": \"<integer>\",\n  \"old-release-protocol\": \"HTTPS\",\n  \"old-release-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.233.3.250\"\n    }\n  },\n  \"old-release-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/embed-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"embed-yourself"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"registry-office-application\": \"<string>\",\n  \"registry-office-application-release-number\": \"0.4.99\",\n  \"relay-server-replacement-operation\": \"<string>\",\n  \"relay-operation-update-operation\": \"<string>\",\n  \"deregistration-operation\": \"<string>\",\n  \"registry-office-protocol\": \"HTTPS\",\n  \"registry-office-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"233.72.4.245\"\n    }\n  },\n  \"registry-office-port\": \"<integer>\",\n  \"old-release-protocol\": \"HTTPS\",\n  \"old-release-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.233.3.250\"\n    }\n  },\n  \"old-release-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/embed-yourself",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"embed-yourself"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "redirect-service-request-information",
					"item": [
						{
							"name": "Offers configuring the client side for sending service request information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"service-log-application\": \"ExecutionAndTraceLog\",\n  \"service-log-application-release-number\": \"82.1.8\",\n  \"service-log-operation\": \"<string>\",\n  \"service-log-protocol\": \"HTTP\",\n  \"service-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.251.53.255\"\n    }\n  },\n  \"service-log-port\": 3002\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/redirect-service-request-information",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"redirect-service-request-information"
									]
								}
							},
							"response": [
								{
									"name": "Information about service requests will be send to the new target",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"service-log-application\": \"<string>\",\n  \"service-log-application-release-number\": \"82.1.8\",\n  \"service-log-operation\": \"<string>\",\n  \"service-log-protocol\": \"HTTPS\",\n  \"service-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.251.53.255\"\n    }\n  },\n  \"service-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-service-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-service-request-information"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-002/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"service-log-application\": \"<string>\",\n  \"service-log-application-release-number\": \"82.1.8\",\n  \"service-log-operation\": \"<string>\",\n  \"service-log-protocol\": \"HTTPS\",\n  \"service-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.251.53.255\"\n    }\n  },\n  \"service-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-service-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-service-request-information"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"service-log-application\": \"<string>\",\n  \"service-log-application-release-number\": \"82.1.8\",\n  \"service-log-operation\": \"<string>\",\n  \"service-log-protocol\": \"HTTPS\",\n  \"service-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.251.53.255\"\n    }\n  },\n  \"service-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-service-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-service-request-information"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"service-log-application\": \"<string>\",\n  \"service-log-application-release-number\": \"82.1.8\",\n  \"service-log-operation\": \"<string>\",\n  \"service-log-protocol\": \"HTTPS\",\n  \"service-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.251.53.255\"\n    }\n  },\n  \"service-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-service-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-service-request-information"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"service-log-application\": \"<string>\",\n  \"service-log-application-release-number\": \"82.1.8\",\n  \"service-log-operation\": \"<string>\",\n  \"service-log-protocol\": \"HTTPS\",\n  \"service-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.251.53.255\"\n    }\n  },\n  \"service-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-service-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-service-request-information"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"service-log-application\": \"<string>\",\n  \"service-log-application-release-number\": \"82.1.8\",\n  \"service-log-operation\": \"<string>\",\n  \"service-log-protocol\": \"HTTPS\",\n  \"service-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.251.53.255\"\n    }\n  },\n  \"service-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-service-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-service-request-information"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"service-log-application\": \"<string>\",\n  \"service-log-application-release-number\": \"82.1.8\",\n  \"service-log-operation\": \"<string>\",\n  \"service-log-protocol\": \"HTTPS\",\n  \"service-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.251.53.255\"\n    }\n  },\n  \"service-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-service-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-service-request-information"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "redirect-oam-request-information",
					"item": [
						{
							"name": "Offers configuring the client side for sending OaM request information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"oam-log-application\": \"OamLog\",\n  \"oam-log-application-release-number\": \"62.75.13\",\n  \"oam-log-operation\": \"<string>\",\n  \"oam-log-protocol\": \"HTTP\",\n  \"oam-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"95.204.90.06\"\n    }\n  },\n  \"oam-log-port\": 3003\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/redirect-oam-request-information",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"redirect-oam-request-information"
									]
								}
							},
							"response": [
								{
									"name": "Information about OaM requests will be send to the new target",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-log-application\": \"<string>\",\n  \"oam-log-application-release-number\": \"62.75.13\",\n  \"oam-log-operation\": \"<string>\",\n  \"oam-log-protocol\": \"HTTP\",\n  \"oam-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"095.204.90.06\"\n    }\n  },\n  \"oam-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-oam-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-oam-request-information"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-003/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-log-application\": \"<string>\",\n  \"oam-log-application-release-number\": \"62.75.13\",\n  \"oam-log-operation\": \"<string>\",\n  \"oam-log-protocol\": \"HTTP\",\n  \"oam-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"095.204.90.06\"\n    }\n  },\n  \"oam-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-oam-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-oam-request-information"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-log-application\": \"<string>\",\n  \"oam-log-application-release-number\": \"62.75.13\",\n  \"oam-log-operation\": \"<string>\",\n  \"oam-log-protocol\": \"HTTP\",\n  \"oam-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"095.204.90.06\"\n    }\n  },\n  \"oam-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-oam-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-oam-request-information"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-log-application\": \"<string>\",\n  \"oam-log-application-release-number\": \"62.75.13\",\n  \"oam-log-operation\": \"<string>\",\n  \"oam-log-protocol\": \"HTTP\",\n  \"oam-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"095.204.90.06\"\n    }\n  },\n  \"oam-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-oam-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-oam-request-information"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-log-application\": \"<string>\",\n  \"oam-log-application-release-number\": \"62.75.13\",\n  \"oam-log-operation\": \"<string>\",\n  \"oam-log-protocol\": \"HTTP\",\n  \"oam-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"095.204.90.06\"\n    }\n  },\n  \"oam-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-oam-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-oam-request-information"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-log-application\": \"<string>\",\n  \"oam-log-application-release-number\": \"62.75.13\",\n  \"oam-log-operation\": \"<string>\",\n  \"oam-log-protocol\": \"HTTP\",\n  \"oam-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"095.204.90.06\"\n    }\n  },\n  \"oam-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-oam-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-oam-request-information"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-log-application\": \"<string>\",\n  \"oam-log-application-release-number\": \"62.75.13\",\n  \"oam-log-operation\": \"<string>\",\n  \"oam-log-protocol\": \"HTTP\",\n  \"oam-log-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"095.204.90.06\"\n    }\n  },\n  \"oam-log-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-oam-request-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-oam-request-information"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "end-subscription",
					"item": [
						{
							"name": "Stops sending notifications of a specific subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subscriber-application\": \"<string>\",\n  \"subscriber-release-number\": \"19.95.0\",\n  \"subscription\": \"<string>\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/end-subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"end-subscription"
									]
								}
							},
							"response": [
								{
									"name": "Stopped sending notifications of a specific subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subscriber-application\": \"<string>\",\n  \"subscriber-release-number\": \"19.95.0\",\n  \"subscription\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/end-subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"end-subscription"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-004/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subscriber-application\": \"<string>\",\n  \"subscriber-release-number\": \"19.95.0\",\n  \"subscription\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/end-subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"end-subscription"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subscriber-application\": \"<string>\",\n  \"subscriber-release-number\": \"19.95.0\",\n  \"subscription\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/end-subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"end-subscription"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subscriber-application\": \"<string>\",\n  \"subscriber-release-number\": \"19.95.0\",\n  \"subscription\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/end-subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"end-subscription"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subscriber-application\": \"<string>\",\n  \"subscriber-release-number\": \"19.95.0\",\n  \"subscription\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/end-subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"end-subscription"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subscriber-application\": \"<string>\",\n  \"subscriber-release-number\": \"19.95.0\",\n  \"subscription\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/end-subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"end-subscription"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subscriber-application\": \"<string>\",\n  \"subscriber-release-number\": \"19.95.0\",\n  \"subscription\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/end-subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"end-subscription"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "update-client",
					"item": [
						{
							"name": "Allows updating connection data of a serving application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"current-application-name\": \"NotificationProxy\",\n  \"current-release-number\": \"0.27.75\",\n  \"future-application-name\": \"NotificationProxy\",\n  \"future-release-number\": \"97.94.0\",\n  \"future-protocol\": \"HTTP\",\n  \"future-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.77.31.251\"\n    }\n  },\n  \"future-port\": 54322\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/update-client",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"update-client"
									]
								},
								"description": "'Initiates update of release number and TCP/IP address at existing HttpClients and TcpClients. If combination of {future-application-name, future-release-number} is different from combination {current-application-name, current-release-number} and if HttpClient with combination of {future-application-name, future-release-number} already exists, HttpClient with combination {current-application-name, current-release-number} shall not be updated, but OperationClients shall be transferred to the HttpClient with combination of {future-application-name, future-release-number}.'\n"
							},
							"response": [
								{
									"name": "Will update connection information",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"current-application-name\": \"<string>\",\n  \"current-release-number\": \"0.27.75\",\n  \"future-application-name\": \"<string>\",\n  \"future-release-number\": \"97.94.0\",\n  \"future-protocol\": \"HTTP\",\n  \"future-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.77.31.251\"\n    }\n  },\n  \"future-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-client"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-007/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"current-application-name\": \"<string>\",\n  \"current-release-number\": \"0.27.75\",\n  \"future-application-name\": \"<string>\",\n  \"future-release-number\": \"97.94.0\",\n  \"future-protocol\": \"HTTP\",\n  \"future-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.77.31.251\"\n    }\n  },\n  \"future-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-client"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"current-application-name\": \"<string>\",\n  \"current-release-number\": \"0.27.75\",\n  \"future-application-name\": \"<string>\",\n  \"future-release-number\": \"97.94.0\",\n  \"future-protocol\": \"HTTP\",\n  \"future-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.77.31.251\"\n    }\n  },\n  \"future-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-client"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"current-application-name\": \"<string>\",\n  \"current-release-number\": \"0.27.75\",\n  \"future-application-name\": \"<string>\",\n  \"future-release-number\": \"97.94.0\",\n  \"future-protocol\": \"HTTP\",\n  \"future-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.77.31.251\"\n    }\n  },\n  \"future-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-client"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"current-application-name\": \"<string>\",\n  \"current-release-number\": \"0.27.75\",\n  \"future-application-name\": \"<string>\",\n  \"future-release-number\": \"97.94.0\",\n  \"future-protocol\": \"HTTP\",\n  \"future-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.77.31.251\"\n    }\n  },\n  \"future-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-client"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"current-application-name\": \"<string>\",\n  \"current-release-number\": \"0.27.75\",\n  \"future-application-name\": \"<string>\",\n  \"future-release-number\": \"97.94.0\",\n  \"future-protocol\": \"HTTP\",\n  \"future-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.77.31.251\"\n    }\n  },\n  \"future-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-client"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"current-application-name\": \"<string>\",\n  \"current-release-number\": \"0.27.75\",\n  \"future-application-name\": \"<string>\",\n  \"future-release-number\": \"97.94.0\",\n  \"future-protocol\": \"HTTP\",\n  \"future-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"255.77.31.251\"\n    }\n  },\n  \"future-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-client"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "inquire-oam-request-approvals",
					"item": [
						{
							"name": "Receives information about where to ask for approval of OaM requests",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"oam-approval-application\": \"AdministratorAdministration\",\n  \"oam-approval-application-release-number\": \"1.0.0\",\n  \"oam-approval-operation\": \"/v1/approve-oam-request\",\n  \"oam-approval-protocol\": \"HTTP\",\n  \"oam-approval-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"192.168.0.47\"\n    }\n  },\n  \"oam-approval-port\": 3005\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/inquire-oam-request-approvals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"inquire-oam-request-approvals"
									]
								}
							},
							"response": [
								{
									"name": "Informed about where to inquire for approval of OaM requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-approval-application\": \"<string>\",\n  \"oam-approval-application-release-number\": \"8.2.97\",\n  \"oam-approval-operation\": \"<string>\",\n  \"oam-approval-protocol\": \"HTTP\",\n  \"oam-approval-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.255.250.09\"\n    }\n  },\n  \"oam-approval-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inquire-oam-request-approvals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inquire-oam-request-approvals"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-005/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-approval-application\": \"<string>\",\n  \"oam-approval-application-release-number\": \"8.2.97\",\n  \"oam-approval-operation\": \"<string>\",\n  \"oam-approval-protocol\": \"HTTP\",\n  \"oam-approval-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.255.250.09\"\n    }\n  },\n  \"oam-approval-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inquire-oam-request-approvals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inquire-oam-request-approvals"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-approval-application\": \"<string>\",\n  \"oam-approval-application-release-number\": \"8.2.97\",\n  \"oam-approval-operation\": \"<string>\",\n  \"oam-approval-protocol\": \"HTTP\",\n  \"oam-approval-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.255.250.09\"\n    }\n  },\n  \"oam-approval-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inquire-oam-request-approvals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inquire-oam-request-approvals"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-approval-application\": \"<string>\",\n  \"oam-approval-application-release-number\": \"8.2.97\",\n  \"oam-approval-operation\": \"<string>\",\n  \"oam-approval-protocol\": \"HTTP\",\n  \"oam-approval-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.255.250.09\"\n    }\n  },\n  \"oam-approval-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inquire-oam-request-approvals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inquire-oam-request-approvals"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-approval-application\": \"<string>\",\n  \"oam-approval-application-release-number\": \"8.2.97\",\n  \"oam-approval-operation\": \"<string>\",\n  \"oam-approval-protocol\": \"HTTP\",\n  \"oam-approval-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.255.250.09\"\n    }\n  },\n  \"oam-approval-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inquire-oam-request-approvals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inquire-oam-request-approvals"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-approval-application\": \"<string>\",\n  \"oam-approval-application-release-number\": \"8.2.97\",\n  \"oam-approval-operation\": \"<string>\",\n  \"oam-approval-protocol\": \"HTTP\",\n  \"oam-approval-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.255.250.09\"\n    }\n  },\n  \"oam-approval-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inquire-oam-request-approvals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inquire-oam-request-approvals"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oam-approval-application\": \"<string>\",\n  \"oam-approval-application-release-number\": \"8.2.97\",\n  \"oam-approval-operation\": \"<string>\",\n  \"oam-approval-protocol\": \"HTTP\",\n  \"oam-approval-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"253.255.250.09\"\n    }\n  },\n  \"oam-approval-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inquire-oam-request-approvals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inquire-oam-request-approvals"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "list-ltps-and-fcs",
					"item": [
						{
							"name": "Allows retrieving all interface and internal connection data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate that the response has core-model-1-4:control-construct object\r",
											"pm.test(\"Response to have 'core-model-1-4:control-construct' object\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('core-model-1-4:control-construct');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/list-ltps-and-fcs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"list-ltps-and-fcs"
									]
								}
							},
							"response": [
								{
									"name": "All interface and internal connection data provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/list-ltps-and-fcs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"list-ltps-and-fcs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-008/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"core-model-1-4:control-construct\": {\n    \"uuid\": \"<string>\",\n    \"logical-termination-point\": [\n      {\n        \"uuid\": \"<string>\",\n        \"ltp-direction\": \"<string>\",\n        \"client-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"server-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"layer-protocol\": [\n          {\n            \"local-id\": \"<string>\",\n            \"layer-protocol-name\": \"<string>\",\n            \"operation-server-interface-1-0:operation-server-interface-pac\": {\n              \"operation-server-interface-capability\": {\n                \"operation-name\": \"<string>\"\n              },\n              \"operation-server-interface-configuration\": {\n                \"life-cycle-state\": \"<string>\"\n              }\n            }\n          }\n        ]\n      },\n      {\n        \"uuid\": \"<string>\",\n        \"ltp-direction\": \"<string>\",\n        \"client-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"server-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"layer-protocol\": [\n          {\n            \"local-id\": \"<string>\",\n            \"layer-protocol-name\": \"<string>\",\n            \"operation-server-interface-1-0:operation-server-interface-pac\": {\n              \"operation-server-interface-capability\": {\n                \"operation-name\": \"<string>\"\n              },\n              \"operation-server-interface-configuration\": {\n                \"life-cycle-state\": \"<string>\"\n              }\n            }\n          }\n        ]\n      }\n    ],\n    \"forwarding-domain\": [\n      {\n        \"uuid\": \"<string>\",\n        \"forwarding-construct\": [\n          {\n            \"uuid\": \"<string>\",\n            \"name\": [\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"fc-port\": [\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"<string>\",\n                \"logical-termination-point\": \"<string>\"\n              },\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"<string>\",\n                \"logical-termination-point\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"uuid\": \"<string>\",\n            \"name\": [\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"fc-port\": [\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"<string>\",\n                \"logical-termination-point\": \"<string>\"\n              },\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"<string>\",\n                \"logical-termination-point\": \"<string>\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/list-ltps-and-fcs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"list-ltps-and-fcs"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/list-ltps-and-fcs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"list-ltps-and-fcs"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/list-ltps-and-fcs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"list-ltps-and-fcs"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/list-ltps-and-fcs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"list-ltps-and-fcs"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/list-ltps-and-fcs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"list-ltps-and-fcs"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/list-ltps-and-fcs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"list-ltps-and-fcs"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "redirect-topology-change-information",
					"item": [
						{
							"name": "Offers configuring client side for sending information about topology changes and provides current data tree",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate that the response has core-model-1-4:control-construct object\r",
											"pm.test(\"Response to have 'core-model-1-4:control-construct' object\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('core-model-1-4:control-construct');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"topology-application\": \"ApplicationLayerTopology\",\n  \"topology-application-release-number\": \"41.8.6\",\n  \"topology-operation-ltp-update\": \"<string>\",\n  \"topology-operation-ltp-deletion\": \"<string>\",\n  \"topology-operation-fc-update\": \"<string>\",\n  \"topology-operation-fc-port-update\": \"<string>\",\n  \"topology-operation-fc-port-deletion\": \"<string>\",\n  \"topology-application-protocol\": \"HTTPS\",\n  \"topology-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"17.220.250.250\"\n    }\n  },\n  \"topology-application-port\": 3001\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/redirect-topology-change-information",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"redirect-topology-change-information"
									]
								}
							},
							"response": [
								{
									"name": "Client side for sending information about topology changes has been updated and current data tree has been provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"topology-application\": \"<string>\",\n  \"topology-application-release-number\": \"41.8.6\",\n  \"topology-operation-ltp-update\": \"<string>\",\n  \"topology-operation-ltp-deletion\": \"<string>\",\n  \"topology-operation-fc-update\": \"<string>\",\n  \"topology-operation-fc-port-update\": \"<string>\",\n  \"topology-operation-fc-port-deletion\": \"<string>\",\n  \"topology-application-protocol\": \"HTTPS\",\n  \"topology-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"17.220.250.250\"\n    }\n  },\n  \"topology-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-topology-change-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-topology-change-information"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-009/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"core-model-1-4:control-construct\": {\n    \"uuid\": \"<string>\",\n    \"logical-termination-point\": [\n      {\n        \"uuid\": \"<string>\",\n        \"ltp-direction\": \"<string>\",\n        \"client-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"server-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"layer-protocol\": [\n          {\n            \"local-id\": \"<string>\",\n            \"layer-protocol-name\": \"<string>\",\n            \"operation-server-interface-1-0:operation-server-interface-pac\": {\n              \"operation-server-interface-capability\": {\n                \"operation-name\": \"<string>\"\n              },\n              \"operation-server-interface-configuration\": {\n                \"life-cycle-state\": \"<string>\"\n              }\n            }\n          }\n        ]\n      },\n      {\n        \"uuid\": \"<string>\",\n        \"ltp-direction\": \"<string>\",\n        \"client-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"server-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"layer-protocol\": [\n          {\n            \"local-id\": \"<string>\",\n            \"layer-protocol-name\": \"<string>\",\n            \"operation-server-interface-1-0:operation-server-interface-pac\": {\n              \"operation-server-interface-capability\": {\n                \"operation-name\": \"<string>\"\n              },\n              \"operation-server-interface-configuration\": {\n                \"life-cycle-state\": \"<string>\"\n              }\n            }\n          }\n        ]\n      }\n    ],\n    \"forwarding-domain\": [\n      {\n        \"uuid\": \"<string>\",\n        \"forwarding-construct\": [\n          {\n            \"uuid\": \"<string>\",\n            \"name\": [\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"fc-port\": [\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"<string>\",\n                \"logical-termination-point\": \"<string>\"\n              },\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"<string>\",\n                \"logical-termination-point\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"uuid\": \"<string>\",\n            \"name\": [\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"fc-port\": [\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"<string>\",\n                \"logical-termination-point\": \"<string>\"\n              },\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"<string>\",\n                \"logical-termination-point\": \"<string>\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"topology-application\": \"<string>\",\n  \"topology-application-release-number\": \"41.8.6\",\n  \"topology-operation-ltp-update\": \"<string>\",\n  \"topology-operation-ltp-deletion\": \"<string>\",\n  \"topology-operation-fc-update\": \"<string>\",\n  \"topology-operation-fc-port-update\": \"<string>\",\n  \"topology-operation-fc-port-deletion\": \"<string>\",\n  \"topology-application-protocol\": \"HTTPS\",\n  \"topology-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"17.220.250.250\"\n    }\n  },\n  \"topology-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-topology-change-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-topology-change-information"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"topology-application\": \"<string>\",\n  \"topology-application-release-number\": \"41.8.6\",\n  \"topology-operation-ltp-update\": \"<string>\",\n  \"topology-operation-ltp-deletion\": \"<string>\",\n  \"topology-operation-fc-update\": \"<string>\",\n  \"topology-operation-fc-port-update\": \"<string>\",\n  \"topology-operation-fc-port-deletion\": \"<string>\",\n  \"topology-application-protocol\": \"HTTPS\",\n  \"topology-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"17.220.250.250\"\n    }\n  },\n  \"topology-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-topology-change-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-topology-change-information"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"topology-application\": \"<string>\",\n  \"topology-application-release-number\": \"41.8.6\",\n  \"topology-operation-ltp-update\": \"<string>\",\n  \"topology-operation-ltp-deletion\": \"<string>\",\n  \"topology-operation-fc-update\": \"<string>\",\n  \"topology-operation-fc-port-update\": \"<string>\",\n  \"topology-operation-fc-port-deletion\": \"<string>\",\n  \"topology-application-protocol\": \"HTTPS\",\n  \"topology-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"17.220.250.250\"\n    }\n  },\n  \"topology-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-topology-change-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-topology-change-information"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"topology-application\": \"<string>\",\n  \"topology-application-release-number\": \"41.8.6\",\n  \"topology-operation-ltp-update\": \"<string>\",\n  \"topology-operation-ltp-deletion\": \"<string>\",\n  \"topology-operation-fc-update\": \"<string>\",\n  \"topology-operation-fc-port-update\": \"<string>\",\n  \"topology-operation-fc-port-deletion\": \"<string>\",\n  \"topology-application-protocol\": \"HTTPS\",\n  \"topology-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"17.220.250.250\"\n    }\n  },\n  \"topology-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-topology-change-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-topology-change-information"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"topology-application\": \"<string>\",\n  \"topology-application-release-number\": \"41.8.6\",\n  \"topology-operation-ltp-update\": \"<string>\",\n  \"topology-operation-ltp-deletion\": \"<string>\",\n  \"topology-operation-fc-update\": \"<string>\",\n  \"topology-operation-fc-port-update\": \"<string>\",\n  \"topology-operation-fc-port-deletion\": \"<string>\",\n  \"topology-application-protocol\": \"HTTPS\",\n  \"topology-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"17.220.250.250\"\n    }\n  },\n  \"topology-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-topology-change-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-topology-change-information"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"topology-application\": \"<string>\",\n  \"topology-application-release-number\": \"41.8.6\",\n  \"topology-operation-ltp-update\": \"<string>\",\n  \"topology-operation-ltp-deletion\": \"<string>\",\n  \"topology-operation-fc-update\": \"<string>\",\n  \"topology-operation-fc-port-update\": \"<string>\",\n  \"topology-operation-fc-port-deletion\": \"<string>\",\n  \"topology-application-protocol\": \"HTTPS\",\n  \"topology-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"17.220.250.250\"\n    }\n  },\n  \"topology-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/redirect-topology-change-information",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"redirect-topology-change-information"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "update-operation-key",
					"item": [
						{
							"name": "Allows updating operation key at a server or client",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation-uuid\": \"np-1-0-0-op-s-bm-000\",\n  \"new-operation-key\": \"NEW_OPERATION_KEY\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/update-operation-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"update-operation-key"
									]
								}
							},
							"response": [
								{
									"name": "Operation key has been updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-010/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "revert operation key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation-uuid\": \"np-1-0-0-op-s-bm-000\",\n  \"new-operation-key\": \"{{apiKeyInitial}}\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/update-operation-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"update-operation-key"
									]
								}
							},
							"response": [
								{
									"name": "Operation key has been updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-010/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation-uuid\": \"ryucm-4-5-94-op-s-is-rspoei-25-6-9-143\",\n  \"new-operation-key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-key"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "update-operation-client",
					"item": [
						{
							"name": "Allows updating operation clients to redirect to backward compatible services",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyInitial}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"application-name\": \"<string>\",\n  \"release-number\": \"17.67.03\",\n  \"old-operation-name\": \"<string>\",\n  \"new-operation-name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/update-operation-client",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"update-operation-client"
									]
								}
							},
							"response": [
								{
									"name": "Operation clients will be updated, if existing",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"application-name\": \"<string>\",\n  \"release-number\": \"17.67.03\",\n  \"old-operation-name\": \"<string>\",\n  \"new-operation-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-client"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bm-011/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"application-name\": \"<string>\",\n  \"release-number\": \"17.67.03\",\n  \"old-operation-name\": \"<string>\",\n  \"new-operation-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-client"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"application-name\": \"<string>\",\n  \"release-number\": \"17.67.03\",\n  \"old-operation-name\": \"<string>\",\n  \"new-operation-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-client"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"application-name\": \"<string>\",\n  \"release-number\": \"17.67.03\",\n  \"old-operation-name\": \"<string>\",\n  \"new-operation-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-client"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"application-name\": \"<string>\",\n  \"release-number\": \"17.67.03\",\n  \"old-operation-name\": \"<string>\",\n  \"new-operation-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-client"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"application-name\": \"<string>\",\n  \"release-number\": \"17.67.03\",\n  \"old-operation-name\": \"<string>\",\n  \"new-operation-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-client"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"application-name\": \"<string>\",\n  \"release-number\": \"17.67.03\",\n  \"old-operation-name\": \"<string>\",\n  \"new-operation-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/update-operation-client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"update-operation-client"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "start-application-in-generic-representation",
					"item": [
						{
							"name": "Starts application in generic representation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate that the response has consequent-action-list object\r",
											"pm.test(\"Response to have 'consequent-action-list' object\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('consequent-action-list');\r",
											"});\r",
											"\r",
											"// Validate that the response has response-value-list object\r",
											"pm.test(\"Response to have 'response-value-list' object\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('response-value-list');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/start-application-in-generic-representation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"start-application-in-generic-representation"
									]
								}
							},
							"response": [
								{
									"name": "Start mask provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/start-application-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"start-application-in-generic-representation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bs-000/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"response-value-list\": [\n    {\n      \"field-name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"datatype\": \"<string>\"\n    },\n    {\n      \"field-name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"datatype\": \"<string>\"\n    }\n  ],\n  \"consequent-action-list\": [\n    {\n      \"label\": \"<string>\",\n      \"request\": \"<string>\",\n      \"display-in-new-browser-window\": \"<boolean>\",\n      \"input-value-list\": [\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        },\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"label\": \"<string>\",\n      \"request\": \"<string>\",\n      \"display-in-new-browser-window\": \"<boolean>\",\n      \"input-value-list\": [\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        },\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/start-application-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"start-application-in-generic-representation"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/start-application-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"start-application-in-generic-representation"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/start-application-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"start-application-in-generic-representation"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/start-application-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"start-application-in-generic-representation"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/start-application-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"start-application-in-generic-representation"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "inform-about-application",
					"item": [
						{
							"name": "Returns administrative information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate that the response has application-name object\r",
											"pm.test(\"Response to have 'application-name' object\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('application-name');\r",
											"});\r",
											"\r",
											"// Validate that the response has release-number object\r",
											"pm.test(\"Response to have 'release-number' object\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('release-number');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/inform-about-application",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"inform-about-application"
									]
								}
							},
							"response": [
								{
									"name": "Administrative information provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-application",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-application"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bs-001/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"application-name\": \"<string>\",\n  \"release-number\": \"<string>\",\n  \"application-purpose\": \"<string>\",\n  \"data-update-period\": \"1h-period\",\n  \"owner-name\": \"<string>\",\n  \"owner-email-address\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-application",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-application"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-application",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-application"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-application",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-application"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-application",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-application"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "inform-about-application-in-generic-representation",
					"item": [
						{
							"name": "Returns administrative information for generic representation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate that the response has consequent-action-list object\r",
											"pm.test(\"Response to have 'consequent-action-list' object\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('consequent-action-list');\r",
											"});\r",
											"\r",
											"// Validate that the response has response-value-list object\r",
											"pm.test(\"Response to have 'response-value-list' object\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('response-value-list');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/inform-about-application-in-generic-representation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"inform-about-application-in-generic-representation"
									]
								}
							},
							"response": [
								{
									"name": "Administrative information provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-application-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-application-in-generic-representation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bs-002/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"response-value-list\": [\n    {\n      \"field-name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"datatype\": \"<string>\"\n    },\n    {\n      \"field-name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"datatype\": \"<string>\"\n    }\n  ],\n  \"consequent-action-list\": [\n    {\n      \"label\": \"<string>\",\n      \"request\": \"<string>\",\n      \"display-in-new-browser-window\": \"<boolean>\",\n      \"input-value-list\": [\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        },\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"label\": \"<string>\",\n      \"request\": \"<string>\",\n      \"display-in-new-browser-window\": \"<boolean>\",\n      \"input-value-list\": [\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        },\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-application-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-application-in-generic-representation"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-application-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-application-in-generic-representation"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-application-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-application-in-generic-representation"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-application-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-application-in-generic-representation"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "inform-about-release-history",
					"item": [
						{
							"name": "Returns release history",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate that the response has release-number\r",
											"pm.test(\"Response to have 'release-number' object\", function () {\r",
											"    pm.expect(pm.response.json()[0]).to.have.property('release-number');\r",
											"});\r",
											"\r",
											"// Validate that the response has release-date\r",
											"pm.test(\"Response to have 'release-date' object\", function () {\r",
											"    pm.expect(pm.response.json()[0]).to.have.property('release-date');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/inform-about-release-history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"inform-about-release-history"
									]
								}
							},
							"response": [
								{
									"name": "Release history provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-release-history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-release-history"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bs-003/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"release-number\": \"<string>\",\n    \"release-date\": \"<string>\",\n    \"changes\": \"<string>\"\n  },\n  {\n    \"release-number\": \"<string>\",\n    \"release-date\": \"<string>\",\n    \"changes\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-release-history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-release-history"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-release-history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-release-history"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-release-history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-release-history"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-release-history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-release-history"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "inform-about-release-history-in-generic-representation",
					"item": [
						{
							"name": "Returns release history for generic representation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate that the response has consequent-action-list\r",
											"pm.test(\"Response to have 'consequent-action-list' object\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('consequent-action-list');\r",
											"});\r",
											"\r",
											"// Validate that the response has response-value-list\r",
											"pm.test(\"Response to have 'response-value-list' object\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('response-value-list');\r",
											"});\r",
											"\r",
											"// Validate that the response has response-value-list.value\r",
											"pm.test(\"Response to have 'response-value-list.value' object\", function () {\r",
											"    pm.expect(pm.response.json()['response-value-list'][0]).to.have.property('value');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/inform-about-release-history-in-generic-representation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"inform-about-release-history-in-generic-representation"
									]
								}
							},
							"response": [
								{
									"name": "Release history provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-release-history-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-release-history-in-generic-representation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-bs-004/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"response-value-list\": [\n    {\n      \"field-name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"datatype\": \"<string>\"\n    },\n    {\n      \"field-name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"datatype\": \"<string>\"\n    }\n  ],\n  \"consequent-action-list\": [\n    {\n      \"label\": \"<string>\",\n      \"request\": \"<string>\",\n      \"display-in-new-browser-window\": \"<boolean>\",\n      \"input-value-list\": [\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        },\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"label\": \"<string>\",\n      \"request\": \"<string>\",\n      \"display-in-new-browser-window\": \"<boolean>\",\n      \"input-value-list\": [\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        },\n        {\n          \"field-name\": \"<string>\",\n          \"unit\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-release-history-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-release-history-in-generic-representation"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-release-history-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-release-history-in-generic-representation"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-release-history-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-release-history-in-generic-representation"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inform-about-release-history-in-generic-representation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inform-about-release-history-in-generic-representation"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "IndividualServices",
			"item": [
				{
					"name": "bequeath-your-data-and-die",
					"item": [
						{
							"name": "Initiates process of embedding a new release",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKeyNYP}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "operation-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) User identifier from the system starting the service call",
										"key": "user",
										"value": "<string>"
									},
									{
										"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
										"key": "originator",
										"value": "<string>"
									},
									{
										"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
										"key": "x-correlator",
										"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
									},
									{
										"description": "(Required) Sequence of request numbers along the flow",
										"key": "trace-indicator",
										"value": "3.65399486122"
									},
									{
										"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
										"key": "customer-journey",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"new-application-name\": \"newApplicationName\",\n  \"new-application-release\": \"7.3.0\",\n  \"new-application-protocol\": \"HTTP\",\n  \"new-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"192.168.0.47\"\n    }\n  },\n  \"new-application-port\": 4016\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/bequeath-your-data-and-die",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"bequeath-your-data-and-die"
									]
								}
							},
							"response": [
								{
									"name": "Process of embedding a new release initiated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"new-application-name\": \"<string>\",\n  \"new-application-release\": \"7.3.0\",\n  \"new-application-protocol\": \"HTTP\",\n  \"new-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"251.250.201.13\"\n    }\n  },\n  \"new-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/bequeath-your-data-and-die",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bequeath-your-data-and-die"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "x-correlator",
											"value": "<string>",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "life-cycle-state",
											"value": "NOT_YET_DEFINED",
											"description": {
												"content": "'Life cycle state of the consumed service find in [/core-model-1-4:control-construct/logical-termination-point=np-1-0-0-op-s-im-000/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state]'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"new-application-name\": \"<string>\",\n  \"new-application-release\": \"7.3.0\",\n  \"new-application-protocol\": \"HTTP\",\n  \"new-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"251.250.201.13\"\n    }\n  },\n  \"new-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/bequeath-your-data-and-die",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bequeath-your-data-and-die"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"new-application-name\": \"<string>\",\n  \"new-application-release\": \"7.3.0\",\n  \"new-application-protocol\": \"HTTP\",\n  \"new-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"251.250.201.13\"\n    }\n  },\n  \"new-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/bequeath-your-data-and-die",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bequeath-your-data-and-die"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"new-application-name\": \"<string>\",\n  \"new-application-release\": \"7.3.0\",\n  \"new-application-protocol\": \"HTTP\",\n  \"new-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"251.250.201.13\"\n    }\n  },\n  \"new-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/bequeath-your-data-and-die",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bequeath-your-data-and-die"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"new-application-name\": \"<string>\",\n  \"new-application-release\": \"7.3.0\",\n  \"new-application-protocol\": \"HTTP\",\n  \"new-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"251.250.201.13\"\n    }\n  },\n  \"new-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/bequeath-your-data-and-die",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bequeath-your-data-and-die"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"new-application-name\": \"<string>\",\n  \"new-application-release\": \"7.3.0\",\n  \"new-application-protocol\": \"HTTP\",\n  \"new-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"251.250.201.13\"\n    }\n  },\n  \"new-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/bequeath-your-data-and-die",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bequeath-your-data-and-die"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) User identifier from the system starting the service call",
												"key": "user",
												"value": "<string>"
											},
											{
												"description": "(Required) 'Identification for the system consuming the API, as defined in\n [/core-model-1-4:control-construct/logical-termination-point={uuid}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name]'\n",
												"key": "originator",
												"value": "<string>"
											},
											{
												"description": "(Required) UUID for the service execution flow that allows to correlate requests and responses",
												"key": "x-correlator",
												"value": "73fbE31c-AcF2-9aBc-DE46-530d0feB0B7f"
											},
											{
												"description": "(Required) Sequence of request numbers along the flow",
												"key": "trace-indicator",
												"value": "3.65399486122"
											},
											{
												"description": "(Required) Holds information supporting customer’s journey to which the execution applies",
												"key": "customer-journey",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "operation-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"new-application-name\": \"<string>\",\n  \"new-application-release\": \"7.3.0\",\n  \"new-application-protocol\": \"HTTP\",\n  \"new-application-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"251.250.201.13\"\n    }\n  },\n  \"new-application-port\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/bequeath-your-data-and-die",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bequeath-your-data-and-die"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "x-correlator",
											"value": "9cf8062B-2b1E-BA1F-78d3-bFE7cFed813f",
											"description": {
												"content": "UUID for the service execution flow that allows to correlate requests and responses. Its value must be identical at the response compared with its corresponding request",
												"type": "text/plain"
											}
										},
										{
											"key": "exec-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the total elapsed time for the execution, including all the additional processing needed to retrieve the data from the backend service. Expressed in milliseconds",
												"type": "text/plain"
											}
										},
										{
											"key": "backend-time",
											"value": "<integer>",
											"description": {
												"content": "Value written by the service provider, reporting the elapsed time for data retrieval from the backend (service invocation, database access…). Expressed in milliseconds",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "provide-list-of-connected-devices",
					"item": [
						{
							"name": "Provides list of devices that are connected to the controller",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/provide-list-of-connected-devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"provide-list-of-connected-devices"
									]
								}
							},
							"response": [
								{
									"name": "List of connected devices provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-connected-devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-connected-devices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "life-cycle-state",
											"value": "EXPERIMENTAL",
											"description": {
												"content": "'Life cycle state of the consumed service from {$RequestForListOfConnectedDevicesCausesReadingFromCache.response.headers#life-cycle-state}'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"mount-name-list\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-connected-devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-connected-devices"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-connected-devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-connected-devices"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-connected-devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-connected-devices"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-connected-devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-connected-devices"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-connected-devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-connected-devices"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-connected-devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-connected-devices"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "provide-list-of-device-interfaces",
					"item": [
						{
							"name": "Provides list of LTP UUIDs at a device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mount-name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/provide-list-of-device-interfaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"provide-list-of-device-interfaces"
									]
								}
							},
							"response": [
								{
									"name": "List of LTP UUIDs provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-device-interfaces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-device-interfaces"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "life-cycle-state",
											"value": "EXPERIMENTAL",
											"description": {
												"content": "'Life cycle state of the consumed service from {$RequestForListOfDeviceInterfacesCausesReadingFromCache.response.headers#life-cycle-state}'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"logical-termination-point-list\": [\n    {\n      \"uuid\": \"<string>\",\n      \"local-id\": \"<string>\",\n      \"layer-protocol-name\": \"<string>\"\n    },\n    {\n      \"uuid\": \"<string>\",\n      \"local-id\": \"<string>\",\n      \"layer-protocol-name\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-device-interfaces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-device-interfaces"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-device-interfaces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-device-interfaces"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-device-interfaces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-device-interfaces"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-device-interfaces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-device-interfaces"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-device-interfaces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-device-interfaces"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-device-interfaces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-device-interfaces"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "provide-list-of-actual-device-equipment",
					"item": [
						{
							"name": "Provides list of actual equipment UUIDs inside a device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mount-name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/provide-list-of-actual-device-equipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"provide-list-of-actual-device-equipment"
									]
								}
							},
							"response": [
								{
									"name": "List of actual equipment UUIDs provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-actual-device-equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-actual-device-equipment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "life-cycle-state",
											"value": "EXPERIMENTAL",
											"description": {
												"content": "'Life cycle state of the consumed service from {$RequestForListOfActualDeviceEquipmentCausesReadingFromCache.response.headers#life-cycle-state}'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"top-level-equipment\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"actual-equipment-list\": [\n    {\n      \"uuid\": \"<string>\",\n      \"equipment-type-name\": \"<string>\"\n    },\n    {\n      \"uuid\": \"<string>\",\n      \"equipment-type-name\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-actual-device-equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-actual-device-equipment"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-actual-device-equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-actual-device-equipment"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-actual-device-equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-actual-device-equipment"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-actual-device-equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-actual-device-equipment"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-actual-device-equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-actual-device-equipment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mount-name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-actual-device-equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-actual-device-equipment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "provide-list-of-parallel-links",
					"item": [
						{
							"name": "Provides list of Links between the same ControlConstructs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Validate that the response code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"link-id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/provide-list-of-parallel-links",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"provide-list-of-parallel-links"
									]
								}
							},
							"response": [
								{
									"name": "List of parallel Links provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"link-id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-parallel-links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-parallel-links"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "life-cycle-state",
											"value": "EXPERIMENTAL",
											"description": {
												"content": "'Life cycle state of the consumed service from {$RequestForListOfParallelLinksCausesReadingFromCache.response.headers#life-cycle-state}'\n",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n  \"parallel-link-list\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"link-id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-parallel-links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-parallel-links"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"link-id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-parallel-links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-parallel-links"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"link-id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-parallel-links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-parallel-links"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"link-id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-parallel-links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-parallel-links"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"link-id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-parallel-links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-parallel-links"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored service requests from out of MW SDN domain",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"link-id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/provide-list-of-parallel-links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"provide-list-of-parallel-links"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "core-model-1-4:network-control-domain=cache",
					"item": [
						{
							"name": "control-construct={mountName}",
							"item": [
								{
									"name": "alarms-1-0:alarm-pac",
									"item": [
										{
											"name": "alarm-capability",
											"item": [
												{
													"name": "Provides AlarmCapability from cache",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-capability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"alarms-1-0:alarm-pac",
																"alarm-capability"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
																	"disabled": true
																}
															]
														}
													},
													"response": [
														{
															"name": "AlarmCapability provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-capability?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-capability"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedAlarmCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"alarms-1-0:alarm-capability\": {}\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-capability?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-capability"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-capability?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-capability"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-capability?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-capability"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-capability?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-capability"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-capability?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-capability"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-capability?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-capability"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "alarm-configuration",
											"item": [
												{
													"name": "Provides AlarmConfiguration from cache",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"alarms-1-0:alarm-pac",
																"alarm-configuration"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
																	"disabled": true
																}
															]
														}
													},
													"response": [
														{
															"name": "AlarmConfiguration provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-configuration?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-configuration"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedAlarmConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"alarms-1-0:alarm-configuration\": {}\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-configuration?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-configuration"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-configuration?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-configuration"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-configuration?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-configuration"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-configuration?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-configuration"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-configuration?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-configuration"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-configuration?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-configuration"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "current-alarms",
											"item": [
												{
													"name": "Provides CurrentAlarms from cache",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/current-alarms",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"alarms-1-0:alarm-pac",
																"current-alarms"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
																	"disabled": true
																}
															]
														}
													},
													"response": [
														{
															"name": "CurrentAlarms provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/current-alarms?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"current-alarms"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedCurrentAlarmsCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"alarms-1-0:current-alarms\": {}\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/current-alarms?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"current-alarms"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/current-alarms?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"current-alarms"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/current-alarms?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"current-alarms"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/current-alarms?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"current-alarms"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/current-alarms?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"current-alarms"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/current-alarms?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"current-alarms"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "alarm-event-records",
											"item": [
												{
													"name": "Provides AlarmEventRecords from cache",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-event-records?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"alarms-1-0:alarm-pac",
																"alarm-event-records"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"response": [
														{
															"name": "AlarmEventRecords provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-event-records?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-event-records"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedAlarmEventRecordsCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"alarms-1-0:alarm-event-records\": {}\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-event-records?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-event-records"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-event-records?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-event-records"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-event-records?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-event-records"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-event-records?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-event-records"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-event-records?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-event-records"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/alarms-1-0:alarm-pac/alarm-event-records?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"alarms-1-0:alarm-pac",
																		"alarm-event-records"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// Validate that the response code",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												]
											}
										}
									]
								},
								{
									"name": "equipment={uuid}",
									"item": [
										{
											"name": "connector={localId}",
											"item": [
												{
													"name": "Provides Connector from cache",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"// Validate that the response code\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/connector={{localId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"equipment={{uuid}}",
																"connector={{localId}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
																	"disabled": true
																}
															]
														}
													},
													"response": [
														{
															"name": "Connector provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/connector={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"connector={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedConnectorCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"core-model-1-4:connector\": [\n    {\n      \"local-id\": \"<string>\"\n    },\n    {\n      \"local-id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/connector={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"connector={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/connector={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"connector={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/connector={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"connector={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/connector={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"connector={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/connector={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"connector={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/connector={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"connector={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "contained-holder={localId}",
											"item": [
												{
													"name": "Provides ContainedHolder from cache",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"// Validate that the response code\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/contained-holder={{localId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"equipment={{uuid}}",
																"contained-holder={{localId}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
																	"disabled": true
																}
															]
														}
													},
													"response": [
														{
															"name": "ContainedHolder provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/contained-holder={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"contained-holder={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedContainedHolderCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"core-model-1-4:contained-holder\": [\n    {\n      \"local-id\": \"<string>\"\n    },\n    {\n      \"local-id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/contained-holder={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"contained-holder={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/contained-holder={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"contained-holder={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/contained-holder={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"contained-holder={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/contained-holder={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"contained-holder={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/contained-holder={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"contained-holder={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/contained-holder={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"contained-holder={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "expected-equipment={localId}",
											"item": [
												{
													"name": "Provides ExpectedEquipment from cache",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"// Validate that the response code\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/expected-equipment={{localId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"equipment={{uuid}}",
																"expected-equipment={{localId}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
																	"disabled": true
																}
															]
														}
													},
													"response": [
														{
															"name": "ExpectedEquipment provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/expected-equipment={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"expected-equipment={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedExpectedEquipmentCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"core-model-1-4:expected-equipment\": [\n    {\n      \"local-id\": \"<string>\"\n    },\n    {\n      \"local-id\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/expected-equipment={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"expected-equipment={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/expected-equipment={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"expected-equipment={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/expected-equipment={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"expected-equipment={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/expected-equipment={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"expected-equipment={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/expected-equipment={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"expected-equipment={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/expected-equipment={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"expected-equipment={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "actual-equipment",
											"item": [
												{
													"name": "Provides ActualEquipment from cache",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"// Validate that the response code\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/actual-equipment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"equipment={{uuid}}",
																"actual-equipment"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
																	"disabled": true
																}
															]
														}
													},
													"response": [
														{
															"name": "ActualEquipment provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/actual-equipment?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"actual-equipment"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedActualEquipmentCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"core-model-1-4:actual-equipment\": {}\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/actual-equipment?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"actual-equipment"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/actual-equipment?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"actual-equipment"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/actual-equipment?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"actual-equipment"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/actual-equipment?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"actual-equipment"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/actual-equipment?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"actual-equipment"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}/actual-equipment?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"equipment={{uuid}}",
																		"actual-equipment"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Provides Equipment from cache",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Validate that the response code\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}",
														"equipment={{uuid}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
															"disabled": true
														}
													]
												}
											},
											"response": [
												{
													"name": "Equipment provided from cache",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"equipment={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "life-cycle-state",
															"value": "EXPERIMENTAL",
															"description": {
																"content": "'Life cycle state of the consumed service from {$RequestForCachedEquipmentCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"core-model-1-4:equipment\": [\n    {\n      \"uuid\": \"<string>\",\n      \"connector\": [\n        {\n          \"local-id\": \"<string>\"\n        },\n        {\n          \"local-id\": \"<string>\"\n        }\n      ],\n      \"contained-holder\": [\n        {\n          \"local-id\": \"<string>\"\n        },\n        {\n          \"local-id\": \"<string>\"\n        }\n      ],\n      \"expected-equipment\": [\n        {\n          \"local-id\": \"<string>\"\n        },\n        {\n          \"local-id\": \"<string>\"\n        }\n      ],\n      \"actual-equipment\": {}\n    },\n    {\n      \"uuid\": \"<string>\",\n      \"connector\": [\n        {\n          \"local-id\": \"<string>\"\n        },\n        {\n          \"local-id\": \"<string>\"\n        }\n      ],\n      \"contained-holder\": [\n        {\n          \"local-id\": \"<string>\"\n        },\n        {\n          \"local-id\": \"<string>\"\n        }\n      ],\n      \"expected-equipment\": [\n        {\n          \"local-id\": \"<string>\"\n        },\n        {\n          \"local-id\": \"<string>\"\n        }\n      ],\n      \"actual-equipment\": {}\n    }\n  ]\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"equipment={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"equipment={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"equipment={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"equipment={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"equipment={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/equipment={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"equipment={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// Validate that the response code",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												]
											}
										}
									]
								},
								{
									"name": "firmware-1-0:firmware-collection",
									"item": [
										{
											"name": "firmware-component-list={localId}",
											"item": [
												{
													"name": "firmware-component-pac",
													"item": [
														{
															"name": "firmware-component-capability",
															"item": [
																{
																	"name": "Provides FirmwareComponentCapability from cache",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"// Validate that the response code\r",
																					"pm.test(\"Status code is 200\", function () {\r",
																					"    pm.response.to.have.status(200);\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"firmware-1-0:firmware-collection",
																				"firmware-component-list={{localId}}",
																				"firmware-component-pac",
																				"firmware-component-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "FirmwareComponentCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedFirmwareComponentCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"firmware-1-0:firmware-component-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "firmware-component-status",
															"item": [
																{
																	"name": "Provides FirmwareComponentStatus from cache",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"// Validate that the response code\r",
																					"pm.test(\"Status code is 200\", function () {\r",
																					"    pm.response.to.have.status(200);\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-status?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"firmware-1-0:firmware-collection",
																				"firmware-component-list={{localId}}",
																				"firmware-component-pac",
																				"firmware-component-status"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "FirmwareComponentStatus provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedFirmwareComponentStatusCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"firmware-1-0:firmware-component-status\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}/firmware-component-pac/firmware-component-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"firmware-1-0:firmware-collection",
																						"firmware-component-list={{localId}}",
																						"firmware-component-pac",
																						"firmware-component-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "Provides FirmwareComponentList from cache",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"// Validate that the response code\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"firmware-1-0:firmware-collection",
																"firmware-component-list={{localId}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"response": [
														{
															"name": "FirmwareComponentList provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"firmware-1-0:firmware-collection",
																		"firmware-component-list={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedFirmwareComponentListCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"firmware-1-0:firmware-component-list\": [\n    {\n      \"local-id\": \"<string>\",\n      \"firmware-component-pac\": {\n        \"firmware-component-capability\": {},\n        \"firmware-component-status\": {}\n      }\n    },\n    {\n      \"local-id\": \"<string>\",\n      \"firmware-component-pac\": {\n        \"firmware-component-capability\": {},\n        \"firmware-component-status\": {}\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"firmware-1-0:firmware-collection",
																		"firmware-component-list={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"firmware-1-0:firmware-collection",
																		"firmware-component-list={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"firmware-1-0:firmware-collection",
																		"firmware-component-list={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"firmware-1-0:firmware-collection",
																		"firmware-component-list={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"firmware-1-0:firmware-collection",
																		"firmware-component-list={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection/firmware-component-list={{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"firmware-1-0:firmware-collection",
																		"firmware-component-list={{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"// Validate that the response code",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														]
													}
												}
											]
										},
										{
											"name": "Provides FirmwareCollection from cache",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Validate that the response code\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}",
														"firmware-1-0:firmware-collection"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"response": [
												{
													"name": "FirmwareCollection provided from cache",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"firmware-1-0:firmware-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "life-cycle-state",
															"value": "EXPERIMENTAL",
															"description": {
																"content": "'Life cycle state of the consumed service from {$RequestForCachedFirmwareCollectionCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"firmware-1-0:firmware-collection\": {\n    \"firmware-component-list\": [\n      {\n        \"local-id\": \"<string>\",\n        \"firmware-component-pac\": {\n          \"firmware-component-capability\": {},\n          \"firmware-component-status\": {}\n        }\n      },\n      {\n        \"local-id\": \"<string>\",\n        \"firmware-component-pac\": {\n          \"firmware-component-capability\": {},\n          \"firmware-component-status\": {}\n        }\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"firmware-1-0:firmware-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"firmware-1-0:firmware-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"firmware-1-0:firmware-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"firmware-1-0:firmware-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"firmware-1-0:firmware-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/firmware-1-0:firmware-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"firmware-1-0:firmware-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// Validate that the response code",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												]
											}
										}
									]
								},
								{
									"name": "profile-collection",
									"item": [
										{
											"name": "profile={uuid}",
											"item": [
												{
													"name": "co-channel-profile-1-0:co-channel-profile-pac",
													"item": [
														{
															"name": "co-channel-profile-capability",
															"item": [
																{
																	"name": "Provides CoChannelProfileCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-capability",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"profile-collection",
																				"profile={{uuid}}",
																				"co-channel-profile-1-0:co-channel-profile-pac",
																				"co-channel-profile-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
																					"disabled": true
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "CoChannelProfileCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedCoChannelProfileCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"co-channel-profile-1-0:co-channel-profile-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "co-channel-profile-configuration",
															"item": [
																{
																	"name": "Provides CoChannelProfileConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-configuration",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"profile-collection",
																				"profile={{uuid}}",
																				"co-channel-profile-1-0:co-channel-profile-pac",
																				"co-channel-profile-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
																					"disabled": true
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "CoChannelProfileConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedCoChannelProfileConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"co-channel-profile-1-0:co-channel-profile-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/co-channel-profile-1-0:co-channel-profile-pac/co-channel-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"co-channel-profile-1-0:co-channel-profile-pac",
																						"co-channel-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "policing-profile-1-0:policing-profile-pac",
													"item": [
														{
															"name": "policing-profile-capability",
															"item": [
																{
																	"name": "Provides PolicingProfileCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"profile-collection",
																				"profile={{uuid}}",
																				"policing-profile-1-0:policing-profile-pac",
																				"policing-profile-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "PolicingProfileCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedPolicingProfileCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"policing-profile-1-0:policing-profile-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "policing-profile-configuration",
															"item": [
																{
																	"name": "Provides PolicingProfileConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-configuration?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"profile-collection",
																				"profile={{uuid}}",
																				"policing-profile-1-0:policing-profile-pac",
																				"policing-profile-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "PolicingProfileConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedPolicingProfileConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"policing-profile-1-0:policing-profile-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/policing-profile-1-0:policing-profile-pac/policing-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"policing-profile-1-0:policing-profile-pac",
																						"policing-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "qos-profile-1-0:qos-profile-pac",
													"item": [
														{
															"name": "qos-profile-capability",
															"item": [
																{
																	"name": "Provides QosProfileCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"profile-collection",
																				"profile={{uuid}}",
																				"qos-profile-1-0:qos-profile-pac",
																				"qos-profile-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "QosProfileCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedQosProfileCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"qos-profile-1-0:qos-profile-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "qos-profile-configuration",
															"item": [
																{
																	"name": "Provides QosProfileConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-configuration?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"profile-collection",
																				"profile={{uuid}}",
																				"qos-profile-1-0:qos-profile-pac",
																				"qos-profile-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "QosProfileConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedQosProfileConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"qos-profile-1-0:qos-profile-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/qos-profile-1-0:qos-profile-pac/qos-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"qos-profile-1-0:qos-profile-pac",
																						"qos-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "scheduler-profile-1-0:scheduler-profile-pac",
													"item": [
														{
															"name": "scheduler-profile-capability",
															"item": [
																{
																	"name": "Provides SchedulerProfileCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"profile-collection",
																				"profile={{uuid}}",
																				"scheduler-profile-1-0:scheduler-profile-pac",
																				"scheduler-profile-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "SchedulerProfileCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedSchedulerProfileCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"scheduler-profile-1-0:scheduler-profile-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "scheduler-profile-configuration",
															"item": [
																{
																	"name": "Provides SchedulerProfileConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-configuration?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"profile-collection",
																				"profile={{uuid}}",
																				"scheduler-profile-1-0:scheduler-profile-pac",
																				"scheduler-profile-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "SchedulerProfileConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedSchedulerProfileConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"scheduler-profile-1-0:scheduler-profile-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/scheduler-profile-1-0:scheduler-profile-pac/scheduler-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"scheduler-profile-1-0:scheduler-profile-pac",
																						"scheduler-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "wred-profile-1-0:wred-profile-pac",
													"item": [
														{
															"name": "wred-profile-capability",
															"item": [
																{
																	"name": "Provides WredProfileCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"profile-collection",
																				"profile={{uuid}}",
																				"wred-profile-1-0:wred-profile-pac",
																				"wred-profile-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "WredProfileCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedWredProfileCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"wred-profile-1-0:wred-profile-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "wred-profile-configuration",
															"item": [
																{
																	"name": "Provides WredProfileConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-configuration?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"profile-collection",
																				"profile={{uuid}}",
																				"wred-profile-1-0:wred-profile-pac",
																				"wred-profile-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "WredProfileConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedWredProfileConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"wred-profile-1-0:wred-profile-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}/wred-profile-1-0:wred-profile-pac/wred-profile-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"profile-collection",
																						"profile={{uuid}}",
																						"wred-profile-1-0:wred-profile-pac",
																						"wred-profile-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "Provides Profile from cache",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"profile-collection",
																"profile={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
																	"disabled": true
																}
															]
														}
													},
													"response": [
														{
															"name": "Profile provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"profile-collection",
																		"profile={{uuid}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedProfileCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"core-model-1-4:profile\": [\n    {\n      \"uuid\": \"<string>\",\n      \"profile-name\": \"co-channel-profile-1-0:PROFILE_NAME_TYPE_CO_CHANNEL_PROFILE\",\n      \"co-channel-profile-1-0:co-channel-profile-pac\": {\n        \"co-channel-profile-capability\": {},\n        \"co-channel-profile-configuration\": {}\n      }\n    },\n    {\n      \"uuid\": \"<string>\",\n      \"profile-name\": \"co-channel-profile-1-0:PROFILE_NAME_TYPE_CO_CHANNEL_PROFILE\",\n      \"co-channel-profile-1-0:co-channel-profile-pac\": {\n        \"co-channel-profile-capability\": {},\n        \"co-channel-profile-configuration\": {}\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"profile-collection",
																		"profile={{uuid}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"profile-collection",
																		"profile={{uuid}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"profile-collection",
																		"profile={{uuid}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"profile-collection",
																		"profile={{uuid}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"profile-collection",
																		"profile={{uuid}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection/profile={{uuid}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"profile-collection",
																		"profile={{uuid}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"// Validate that the response code",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														]
													}
												}
											]
										},
										{
											"name": "Provides ProfileCollection from cache",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}",
														"profile-collection"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec",
															"disabled": true
														}
													]
												}
											},
											"response": [
												{
													"name": "ProfileCollection provided from cache",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"profile-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "life-cycle-state",
															"value": "EXPERIMENTAL",
															"description": {
																"content": "'Life cycle state of the consumed service from {$RequestForCachedProfileCollectionCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"core-model-1-4:profile-collection\": {\n    \"profile\": [\n      {\n        \"uuid\": \"<string>\",\n        \"profile-name\": \"co-channel-profile-1-0:PROFILE_NAME_TYPE_CO_CHANNEL_PROFILE\",\n        \"co-channel-profile-1-0:co-channel-profile-pac\": {\n          \"co-channel-profile-capability\": {},\n          \"co-channel-profile-configuration\": {}\n        }\n      },\n      {\n        \"uuid\": \"<string>\",\n        \"profile-name\": \"co-channel-profile-1-0:PROFILE_NAME_TYPE_CO_CHANNEL_PROFILE\",\n        \"co-channel-profile-1-0:co-channel-profile-pac\": {\n          \"co-channel-profile-capability\": {},\n          \"co-channel-profile-configuration\": {}\n        }\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"profile-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"profile-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"profile-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"profile-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"profile-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/profile-collection?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"profile-collection"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// Validate that the response code",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												]
											}
										}
									]
								},
								{
									"name": "logical-termination-point={uuid}",
									"item": [
										{
											"name": "ltp-augment-1-0:ltp-augment-pac",
											"item": [
												{
													"name": "Provides LtpAugment from cache",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/ltp-augment-1-0:ltp-augment-pac?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"logical-termination-point={{uuid}}",
																"ltp-augment-1-0:ltp-augment-pac"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"response": [
														{
															"name": "LtpAugment provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/ltp-augment-1-0:ltp-augment-pac?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"logical-termination-point={{uuid}}",
																		"ltp-augment-1-0:ltp-augment-pac"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedLtpAugmentPacCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"ltp-augment-1-0:ltp-augment-pac\": {}\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/ltp-augment-1-0:ltp-augment-pac?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"logical-termination-point={{uuid}}",
																		"ltp-augment-1-0:ltp-augment-pac"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/ltp-augment-1-0:ltp-augment-pac?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"logical-termination-point={{uuid}}",
																		"ltp-augment-1-0:ltp-augment-pac"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/ltp-augment-1-0:ltp-augment-pac?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"logical-termination-point={{uuid}}",
																		"ltp-augment-1-0:ltp-augment-pac"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/ltp-augment-1-0:ltp-augment-pac?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"logical-termination-point={{uuid}}",
																		"ltp-augment-1-0:ltp-augment-pac"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/ltp-augment-1-0:ltp-augment-pac?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"logical-termination-point={{uuid}}",
																		"ltp-augment-1-0:ltp-augment-pac"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/ltp-augment-1-0:ltp-augment-pac?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"logical-termination-point={{uuid}}",
																		"ltp-augment-1-0:ltp-augment-pac"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "layer-protocol={localId}",
											"item": [
												{
													"name": "air-interface-2-0:air-interface-pac",
													"item": [
														{
															"name": "air-interface-capability",
															"item": [
																{
																	"name": "Provides AirInterfaceCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"air-interface-2-0:air-interface-pac",
																				"air-interface-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "AirInterfaceCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedAirInterfaceCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"air-interface-2-0:air-interface-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "air-interface-configuration",
															"item": [
																{
																	"name": "Provides AirInterfaceConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-configuration?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"air-interface-2-0:air-interface-pac",
																				"air-interface-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "AirInterfaceConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedAirInterfaceConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"air-interface-2-0:air-interface-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "air-interface-status",
															"item": [
																{
																	"name": "Provides AirInterfaceStatus from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-status?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"air-interface-2-0:air-interface-pac",
																				"air-interface-status"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "AirInterfaceStatus provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedAirInterfaceStatusCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"air-interface-2-0:air-interface-status\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "air-interface-historical-performances",
															"item": [
																{
																	"name": "Provides AirInterfaceHistoricalPerformances from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-historical-performances?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"air-interface-2-0:air-interface-pac",
																				"air-interface-historical-performances"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "AirInterfaceHistoricalPerformances provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedAirInterfaceHistoricalPerformancesCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"air-interface-2-0:air-interface-historical-performances\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/air-interface-2-0:air-interface-pac/air-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"air-interface-2-0:air-interface-pac",
																						"air-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "ethernet-container-2-0:ethernet-container-pac",
													"item": [
														{
															"name": "ethernet-container-capability",
															"item": [
																{
																	"name": "Provides EthernetContainerCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"ethernet-container-2-0:ethernet-container-pac",
																				"ethernet-container-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "EthernetContainerCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedEthernetContainerCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"ethernet-container-2-0:ethernet-container-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "ethernet-container-configuration",
															"item": [
																{
																	"name": "Provides EthernetContainerConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-configuration?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"ethernet-container-2-0:ethernet-container-pac",
																				"ethernet-container-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "EthernetContainerConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedEthernetContainerConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"ethernet-container-2-0:ethernet-container-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "ethernet-container-status",
															"item": [
																{
																	"name": "Provides EthernetContainerStatus from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-status?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"ethernet-container-2-0:ethernet-container-pac",
																				"ethernet-container-status"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "EthernetContainerStatus provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedEthernetContainerStatusCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"ethernet-container-2-0:ethernet-container-status\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "ethernet-container-historical-performances",
															"item": [
																{
																	"name": "Provides EthernetContainerHistoricalPerformances from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-historical-performances?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"ethernet-container-2-0:ethernet-container-pac",
																				"ethernet-container-historical-performances"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "EthernetContainerHistoricalPerformances provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedEthernetContainerHistoricalPerformancesCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"ethernet-container-2-0:ethernet-container-historical-performances\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/ethernet-container-2-0:ethernet-container-pac/ethernet-container-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"ethernet-container-2-0:ethernet-container-pac",
																						"ethernet-container-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
													"item": [
														{
															"name": "hybrid-mw-structure-capability",
															"item": [
																{
																	"name": "Provides HybridMwStructureCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																				"hybrid-mw-structure-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "HybridMwStructureCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedHybridMwStructureCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"hybrid-mw-structure-2-0:hybrid-mw-structure-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "hybrid-mw-structure-configuration",
															"item": [
																{
																	"name": "Provides HybridMwStructureConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-configuration?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																				"hybrid-mw-structure-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "HybridMwStructureConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedHybridMwStructureConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"hybrid-mw-structure-2-0:hybrid-mw-structure-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "hybrid-mw-structure-status",
															"item": [
																{
																	"name": "Provides HybridMwStructureStatus from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-status?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																				"hybrid-mw-structure-status"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "HybridMwStructureStatus provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedHybridMwStructureStatusCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"hybrid-mw-structure-2-0:hybrid-mw-structure-status\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "hybrid-mw-structure-historical-performances",
															"item": [
																{
																	"name": "Provides HybridMwStructureHistoricalPerformances from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																				"hybrid-mw-structure-historical-performances"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "HybridMwStructureHistoricalPerformances provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedHybridMwStructureHistoricalPerformancesCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"hybrid-mw-structure-2-0:hybrid-mw-structure-historical-performances\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/hybrid-mw-structure-2-0:hybrid-mw-structure-pac/hybrid-mw-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"hybrid-mw-structure-2-0:hybrid-mw-structure-pac",
																						"hybrid-mw-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "mac-interface-1-0:mac-interface-pac",
													"item": [
														{
															"name": "mac-interface-capability",
															"item": [
																{
																	"name": "Provides MacInterfaceCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"mac-interface-1-0:mac-interface-pac",
																				"mac-interface-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "MacInterfaceCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedMacInterfaceCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"mac-interface-1-0:mac-interface-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "mac-interface-configuration",
															"item": [
																{
																	"name": "Provides MacInterfaceConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-configuration?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"mac-interface-1-0:mac-interface-pac",
																				"mac-interface-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "MacInterfaceConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedMacInterfaceConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"mac-interface-1-0:mac-interface-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "mac-interface-status",
															"item": [
																{
																	"name": "Provides MacInterfaceStatus from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-status?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"mac-interface-1-0:mac-interface-pac",
																				"mac-interface-status"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "MacInterfaceStatus provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedMacInterfaceStatusCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"mac-interface-1-0:mac-interface-status\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "mac-interface-historical-performances",
															"item": [
																{
																	"name": "Provides MacInterfaceHistoricalPerformances from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-historical-performances?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"mac-interface-1-0:mac-interface-pac",
																				"mac-interface-historical-performances"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "MacInterfaceHistoricalPerformances provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedMacInterfaceHistoricalPerformancesCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"mac-interface-1-0:mac-interface-historical-performances\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/mac-interface-1-0:mac-interface-pac/mac-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"mac-interface-1-0:mac-interface-pac",
																						"mac-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
													"item": [
														{
															"name": "pure-ethernet-structure-capability",
															"item": [
																{
																	"name": "Provides PureEthernetStructureCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																				"pure-ethernet-structure-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "PureEthernetStructureCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedPureEthernetStructureCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"pure-ethernet-structure-2-0:pure-ethernet-structure-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "pure-ethernet-structure-configuration",
															"item": [
																{
																	"name": "Provides PureEthernetStructureConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-configuration?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																				"pure-ethernet-structure-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "PureEthernetStructureConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedPureEthernetStructureConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"pure-ethernet-structure-2-0:pure-ethernet-structure-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "pure-ethernet-structure-status",
															"item": [
																{
																	"name": "Provides PureEthernetStructureStatus from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-status?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																				"pure-ethernet-structure-status"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "PureEthernetStructureStatus provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedPureEthernetStructureStatusCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"pure-ethernet-structure-2-0:pure-ethernet-structure-status\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "pure-ethernet-structure-historical-performances",
															"item": [
																{
																	"name": "Provides PureEthernetStructureHistoricalPerformances from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																				"pure-ethernet-structure-historical-performances"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "PureEthernetStructureHistoricalPerformances provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedPureEthernetStructureHistoricalPerformancesCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"pure-ethernet-structure-2-0:pure-ethernet-structure-historical-performances\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/pure-ethernet-structure-2-0:pure-ethernet-structure-pac/pure-ethernet-structure-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"pure-ethernet-structure-2-0:pure-ethernet-structure-pac",
																						"pure-ethernet-structure-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "vlan-interface-1-0:vlan-interface-pac",
													"item": [
														{
															"name": "vlan-interface-capability",
															"item": [
																{
																	"name": "Provides VlanInterfaceCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"vlan-interface-1-0:vlan-interface-pac",
																				"vlan-interface-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "VlanInterfaceCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedVlanInterfaceCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"vlan-interface-1-0:vlan-interface-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "vlan-interface-configuration",
															"item": [
																{
																	"name": "Provides VlanInterfaceConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-configuration?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"vlan-interface-1-0:vlan-interface-pac",
																				"vlan-interface-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "VlanInterfaceConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedVlanInterfaceConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"vlan-interface-1-0:vlan-interface-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "vlan-interface-historical-performances",
															"item": [
																{
																	"name": "Provides VlanInterfaceHistoricalPerformances from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-historical-performances?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"vlan-interface-1-0:vlan-interface-pac",
																				"vlan-interface-historical-performances"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "VlanInterfaceHistoricalPerformances provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedVlanInterfaceHistoricalPerformancesCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"vlan-interface-1-0:vlan-interface-historical-performances\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/vlan-interface-1-0:vlan-interface-pac/vlan-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"vlan-interface-1-0:vlan-interface-pac",
																						"vlan-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "wire-interface-2-0:wire-interface-pac",
													"item": [
														{
															"name": "wire-interface-capability",
															"item": [
																{
																	"name": "Provides WireInterfaceCapability from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-capability?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"wire-interface-2-0:wire-interface-pac",
																				"wire-interface-capability"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "WireInterfaceCapability provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedWireInterfaceCapabilityCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"wire-interface-2-0:wire-interface-capability\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-capability?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-capability"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "wire-interface-configuration",
															"item": [
																{
																	"name": "Provides WireInterfaceConfiguration from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-configuration?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"wire-interface-2-0:wire-interface-pac",
																				"wire-interface-configuration"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "WireInterfaceConfiguration provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedWireInterfaceConfigurationCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"wire-interface-2-0:wire-interface-configuration\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-configuration?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-configuration"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "wire-interface-status",
															"item": [
																{
																	"name": "Provides WireInterfaceStatus from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-status?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"wire-interface-2-0:wire-interface-pac",
																				"wire-interface-status"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "WireInterfaceStatus provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedWireInterfaceStatusCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"wire-interface-2-0:wire-interface-status\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-status?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-status"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "wire-interface-historical-performances",
															"item": [
																{
																	"name": "Provides WireInterfaceHistoricalPerformances from cache",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-historical-performances?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol={{localId}}",
																				"wire-interface-2-0:wire-interface-pac",
																				"wire-interface-historical-performances"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "WireInterfaceHistoricalPerformances provided from cache",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "life-cycle-state",
																					"value": "EXPERIMENTAL",
																					"description": {
																						"content": "'Life cycle state of the consumed service from {$RequestForCachedWireInterfaceHistoricalPerformancesCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"wire-interface-2-0:wire-interface-historical-performances\": {}\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored service requests from out of MW SDN domain",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}/layer-protocol={{localId}}/wire-interface-2-0:wire-interface-pac/wire-interface-historical-performances?fields=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:network-control-domain=cache",
																						"control-construct={{mountName}}",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol={{localId}}",
																						"wire-interface-2-0:wire-interface-pac",
																						"wire-interface-historical-performances"
																					],
																					"query": [
																						{
																							"key": "fields",
																							"value": "<string>",
																							"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "Provides LogicalTerminationPoint from cache",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}",
														"logical-termination-point={{uuid}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"response": [
												{
													"name": "LogicalTerminationPoint provided from cache",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"logical-termination-point={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "life-cycle-state",
															"value": "EXPERIMENTAL",
															"description": {
																"content": "'Life cycle state of the consumed service from {$RequestForCachedLogicalTerminationPointCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"core-model-1-4:logical-termination-point\": [\n    {\n      \"uuid\": \"<string>\",\n      \"layer-protocol\": [\n        {\n          \"local-id\": \"<string>\",\n          \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n          \"air-interface-2-0:air-interface-pac\": {\n            \"air-interface-capability\": {},\n            \"air-interface-configuration\": {},\n            \"air-interface-status\": {},\n            \"air-interface-historical-performances\": {}\n          }\n        },\n        {\n          \"local-id\": \"<string>\",\n          \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n          \"air-interface-2-0:air-interface-pac\": {\n            \"air-interface-capability\": {},\n            \"air-interface-configuration\": {},\n            \"air-interface-status\": {},\n            \"air-interface-historical-performances\": {}\n          }\n        }\n      ],\n      \"ltp-augment-1-0:ltp-augment-pac\": {}\n    },\n    {\n      \"uuid\": \"<string>\",\n      \"layer-protocol\": [\n        {\n          \"local-id\": \"<string>\",\n          \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n          \"air-interface-2-0:air-interface-pac\": {\n            \"air-interface-capability\": {},\n            \"air-interface-configuration\": {},\n            \"air-interface-status\": {},\n            \"air-interface-historical-performances\": {}\n          }\n        },\n        {\n          \"local-id\": \"<string>\",\n          \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n          \"air-interface-2-0:air-interface-pac\": {\n            \"air-interface-capability\": {},\n            \"air-interface-configuration\": {},\n            \"air-interface-status\": {},\n            \"air-interface-historical-performances\": {}\n          }\n        }\n      ],\n      \"ltp-augment-1-0:ltp-augment-pac\": {}\n    }\n  ]\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"logical-termination-point={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"logical-termination-point={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"logical-termination-point={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"logical-termination-point={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"logical-termination-point={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/logical-termination-point={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"logical-termination-point={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// Validate that the response code",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												]
											}
										}
									]
								},
								{
									"name": "forwarding-domain={uuid}",
									"item": [
										{
											"name": "forwarding-construct{uuid1}",
											"item": [
												{
													"name": "fc-port{localId}",
													"item": [
														{
															"name": "Provides ForwardingConstructPort from cache",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}/fc-port{{localId}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"forwarding-domain={{uuid}}",
																		"forwarding-construct{{uuid1}}",
																		"fc-port{{localId}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "ForwardingConstructPort provided from cache",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}/fc-port{{localId}}?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"forwarding-domain={{uuid}}",
																				"forwarding-construct{{uuid1}}",
																				"fc-port{{localId}}"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "life-cycle-state",
																			"value": "EXPERIMENTAL",
																			"description": {
																				"content": "'Life cycle state of the consumed service from {$RequestForCachedForwardingConstructPortCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"core-model-1-4:fc-port\": [\n    {\n      \"local-id\": \"<string>\"\n    },\n    {\n      \"local-id\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "Response in case of errored service requests from out of MW SDN domain",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}/fc-port{{localId}}?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"forwarding-domain={{uuid}}",
																				"forwarding-construct{{uuid1}}",
																				"fc-port{{localId}}"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Response in case of errored service requests from out of MW SDN domain",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}/fc-port{{localId}}?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"forwarding-domain={{uuid}}",
																				"forwarding-construct{{uuid1}}",
																				"fc-port{{localId}}"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Response in case of errored service requests from out of MW SDN domain",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}/fc-port{{localId}}?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"forwarding-domain={{uuid}}",
																				"forwarding-construct{{uuid1}}",
																				"fc-port{{localId}}"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Response in case of errored service requests from out of MW SDN domain",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}/fc-port{{localId}}?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"forwarding-domain={{uuid}}",
																				"forwarding-construct{{uuid1}}",
																				"fc-port{{localId}}"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Response in case of errored service requests from out of MW SDN domain",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}/fc-port{{localId}}?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"forwarding-domain={{uuid}}",
																				"forwarding-construct{{uuid1}}",
																				"fc-port{{localId}}"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Response in case of errored service requests from out of MW SDN domain",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}/fc-port{{localId}}?fields=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:network-control-domain=cache",
																				"control-construct={{mountName}}",
																				"forwarding-domain={{uuid}}",
																				"forwarding-construct{{uuid1}}",
																				"fc-port{{localId}}"
																			],
																			"query": [
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Provides ForwardingConstruct from cache",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"forwarding-domain={{uuid}}",
																"forwarding-construct{{uuid1}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"response": [
														{
															"name": "ForwardingConstruct provided from cache",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"forwarding-domain={{uuid}}",
																		"forwarding-construct{{uuid1}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "life-cycle-state",
																	"value": "EXPERIMENTAL",
																	"description": {
																		"content": "'Life cycle state of the consumed service from {$RequestForCachedForwardingConstructCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"core-model-1-4:forwarding-construct\": [\n    {\n      \"uuid\": \"<string>\",\n      \"fc-port\": [\n        {\n          \"local-id\": \"<string>\"\n        },\n        {\n          \"local-id\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"uuid\": \"<string>\",\n      \"fc-port\": [\n        {\n          \"local-id\": \"<string>\"\n        },\n        {\n          \"local-id\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"forwarding-domain={{uuid}}",
																		"forwarding-construct{{uuid1}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"forwarding-domain={{uuid}}",
																		"forwarding-construct{{uuid1}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"forwarding-domain={{uuid}}",
																		"forwarding-construct{{uuid1}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"forwarding-domain={{uuid}}",
																		"forwarding-construct{{uuid1}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"forwarding-domain={{uuid}}",
																		"forwarding-construct{{uuid1}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Response in case of errored service requests from out of MW SDN domain",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}/forwarding-construct{{uuid1}}?fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"core-model-1-4:network-control-domain=cache",
																		"control-construct={{mountName}}",
																		"forwarding-domain={{uuid}}",
																		"forwarding-construct{{uuid1}}"
																	],
																	"query": [
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Provides ForwardingDomain from cache",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}",
														"forwarding-domain={{uuid}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"response": [
												{
													"name": "ForwardingDomain provided from cache",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"forwarding-domain={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "life-cycle-state",
															"value": "EXPERIMENTAL",
															"description": {
																"content": "'Life cycle state of the consumed service from {$RequestForCachedForwardingDomainCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"core-model-1-4:forwarding-domain\": [\n    {\n      \"uuid\": \"<string>\",\n      \"forwarding-construct\": [\n        {\n          \"uuid\": \"<string>\",\n          \"fc-port\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"uuid\": \"<string>\",\n          \"fc-port\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"uuid\": \"<string>\",\n      \"forwarding-construct\": [\n        {\n          \"uuid\": \"<string>\",\n          \"fc-port\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"uuid\": \"<string>\",\n          \"fc-port\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"forwarding-domain={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"forwarding-domain={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"forwarding-domain={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"forwarding-domain={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"forwarding-domain={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}/forwarding-domain={{uuid}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"control-construct={{mountName}}",
																"forwarding-domain={{uuid}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// Validate that the response code",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												]
											}
										}
									]
								},
								{
									"name": "Provides ControlConstruct from cache",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Validate that the response code\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}?fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core-model-1-4:network-control-domain=cache",
												"control-construct={{mountName}}"
											],
											"query": [
												{
													"key": "fields",
													"value": "<string>",
													"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
												}
											]
										}
									},
									"response": [
										{
											"name": "ControlConstruct provided from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "life-cycle-state",
													"value": "EXPERIMENTAL",
													"description": {
														"content": "'Life cycle state of the consumed service from {$RequestForCachedControlConstructCausesReadingFromCache.response.headers#life-cycle-state}'\n",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"core-model-1-4:control-construct\": [\n    {\n      \"uuid\": \"<string>\",\n      \"alarms-1-0:alarm-pac\": {\n        \"alarm-capability\": {},\n        \"alarm-configuration\": {},\n        \"current-alarms\": {},\n        \"alarm-event-records\": {}\n      },\n      \"equipment\": [\n        {\n          \"uuid\": \"<string>\",\n          \"connector\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"contained-holder\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"expected-equipment\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"actual-equipment\": {}\n        },\n        {\n          \"uuid\": \"<string>\",\n          \"connector\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"contained-holder\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"expected-equipment\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"actual-equipment\": {}\n        }\n      ],\n      \"firmware-1-0:firmware-collection\": {\n        \"firmware-component-list\": [\n          {\n            \"local-id\": \"<string>\",\n            \"firmware-component-pac\": {\n              \"firmware-component-capability\": {},\n              \"firmware-component-status\": {}\n            }\n          },\n          {\n            \"local-id\": \"<string>\",\n            \"firmware-component-pac\": {\n              \"firmware-component-capability\": {},\n              \"firmware-component-status\": {}\n            }\n          }\n        ]\n      },\n      \"profile-collection\": {\n        \"profile\": [\n          {\n            \"uuid\": \"<string>\",\n            \"profile-name\": \"co-channel-profile-1-0:PROFILE_NAME_TYPE_CO_CHANNEL_PROFILE\",\n            \"co-channel-profile-1-0:co-channel-profile-pac\": {\n              \"co-channel-profile-capability\": {},\n              \"co-channel-profile-configuration\": {}\n            }\n          },\n          {\n            \"uuid\": \"<string>\",\n            \"profile-name\": \"co-channel-profile-1-0:PROFILE_NAME_TYPE_CO_CHANNEL_PROFILE\",\n            \"co-channel-profile-1-0:co-channel-profile-pac\": {\n              \"co-channel-profile-capability\": {},\n              \"co-channel-profile-configuration\": {}\n            }\n          }\n        ]\n      },\n      \"logical-termination-point\": [\n        {\n          \"uuid\": \"<string>\",\n          \"layer-protocol\": [\n            {\n              \"local-id\": \"<string>\",\n              \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n              \"air-interface-2-0:air-interface-pac\": {\n                \"air-interface-capability\": {},\n                \"air-interface-configuration\": {},\n                \"air-interface-status\": {},\n                \"air-interface-historical-performances\": {}\n              }\n            },\n            {\n              \"local-id\": \"<string>\",\n              \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n              \"air-interface-2-0:air-interface-pac\": {\n                \"air-interface-capability\": {},\n                \"air-interface-configuration\": {},\n                \"air-interface-status\": {},\n                \"air-interface-historical-performances\": {}\n              }\n            }\n          ],\n          \"ltp-augment-1-0:ltp-augment-pac\": {}\n        },\n        {\n          \"uuid\": \"<string>\",\n          \"layer-protocol\": [\n            {\n              \"local-id\": \"<string>\",\n              \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n              \"air-interface-2-0:air-interface-pac\": {\n                \"air-interface-capability\": {},\n                \"air-interface-configuration\": {},\n                \"air-interface-status\": {},\n                \"air-interface-historical-performances\": {}\n              }\n            },\n            {\n              \"local-id\": \"<string>\",\n              \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n              \"air-interface-2-0:air-interface-pac\": {\n                \"air-interface-capability\": {},\n                \"air-interface-configuration\": {},\n                \"air-interface-status\": {},\n                \"air-interface-historical-performances\": {}\n              }\n            }\n          ],\n          \"ltp-augment-1-0:ltp-augment-pac\": {}\n        }\n      ],\n      \"forwarding-domain\": [\n        {\n          \"uuid\": \"<string>\",\n          \"forwarding-construct\": [\n            {\n              \"uuid\": \"<string>\",\n              \"fc-port\": [\n                {\n                  \"local-id\": \"<string>\"\n                },\n                {\n                  \"local-id\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"uuid\": \"<string>\",\n              \"fc-port\": [\n                {\n                  \"local-id\": \"<string>\"\n                },\n                {\n                  \"local-id\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"uuid\": \"<string>\",\n          \"forwarding-construct\": [\n            {\n              \"uuid\": \"<string>\",\n              \"fc-port\": [\n                {\n                  \"local-id\": \"<string>\"\n                },\n                {\n                  \"local-id\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"uuid\": \"<string>\",\n              \"fc-port\": [\n                {\n                  \"local-id\": \"<string>\"\n                },\n                {\n                  \"local-id\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"uuid\": \"<string>\",\n      \"alarms-1-0:alarm-pac\": {\n        \"alarm-capability\": {},\n        \"alarm-configuration\": {},\n        \"current-alarms\": {},\n        \"alarm-event-records\": {}\n      },\n      \"equipment\": [\n        {\n          \"uuid\": \"<string>\",\n          \"connector\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"contained-holder\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"expected-equipment\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"actual-equipment\": {}\n        },\n        {\n          \"uuid\": \"<string>\",\n          \"connector\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"contained-holder\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"expected-equipment\": [\n            {\n              \"local-id\": \"<string>\"\n            },\n            {\n              \"local-id\": \"<string>\"\n            }\n          ],\n          \"actual-equipment\": {}\n        }\n      ],\n      \"firmware-1-0:firmware-collection\": {\n        \"firmware-component-list\": [\n          {\n            \"local-id\": \"<string>\",\n            \"firmware-component-pac\": {\n              \"firmware-component-capability\": {},\n              \"firmware-component-status\": {}\n            }\n          },\n          {\n            \"local-id\": \"<string>\",\n            \"firmware-component-pac\": {\n              \"firmware-component-capability\": {},\n              \"firmware-component-status\": {}\n            }\n          }\n        ]\n      },\n      \"profile-collection\": {\n        \"profile\": [\n          {\n            \"uuid\": \"<string>\",\n            \"profile-name\": \"co-channel-profile-1-0:PROFILE_NAME_TYPE_CO_CHANNEL_PROFILE\",\n            \"co-channel-profile-1-0:co-channel-profile-pac\": {\n              \"co-channel-profile-capability\": {},\n              \"co-channel-profile-configuration\": {}\n            }\n          },\n          {\n            \"uuid\": \"<string>\",\n            \"profile-name\": \"co-channel-profile-1-0:PROFILE_NAME_TYPE_CO_CHANNEL_PROFILE\",\n            \"co-channel-profile-1-0:co-channel-profile-pac\": {\n              \"co-channel-profile-capability\": {},\n              \"co-channel-profile-configuration\": {}\n            }\n          }\n        ]\n      },\n      \"logical-termination-point\": [\n        {\n          \"uuid\": \"<string>\",\n          \"layer-protocol\": [\n            {\n              \"local-id\": \"<string>\",\n              \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n              \"air-interface-2-0:air-interface-pac\": {\n                \"air-interface-capability\": {},\n                \"air-interface-configuration\": {},\n                \"air-interface-status\": {},\n                \"air-interface-historical-performances\": {}\n              }\n            },\n            {\n              \"local-id\": \"<string>\",\n              \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n              \"air-interface-2-0:air-interface-pac\": {\n                \"air-interface-capability\": {},\n                \"air-interface-configuration\": {},\n                \"air-interface-status\": {},\n                \"air-interface-historical-performances\": {}\n              }\n            }\n          ],\n          \"ltp-augment-1-0:ltp-augment-pac\": {}\n        },\n        {\n          \"uuid\": \"<string>\",\n          \"layer-protocol\": [\n            {\n              \"local-id\": \"<string>\",\n              \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n              \"air-interface-2-0:air-interface-pac\": {\n                \"air-interface-capability\": {},\n                \"air-interface-configuration\": {},\n                \"air-interface-status\": {},\n                \"air-interface-historical-performances\": {}\n              }\n            },\n            {\n              \"local-id\": \"<string>\",\n              \"layer-protocol-name\": \"air-interface-2-0:LAYER_PROTOCOL_NAME_TYPE_AIR_LAYER\",\n              \"air-interface-2-0:air-interface-pac\": {\n                \"air-interface-capability\": {},\n                \"air-interface-configuration\": {},\n                \"air-interface-status\": {},\n                \"air-interface-historical-performances\": {}\n              }\n            }\n          ],\n          \"ltp-augment-1-0:ltp-augment-pac\": {}\n        }\n      ],\n      \"forwarding-domain\": [\n        {\n          \"uuid\": \"<string>\",\n          \"forwarding-construct\": [\n            {\n              \"uuid\": \"<string>\",\n              \"fc-port\": [\n                {\n                  \"local-id\": \"<string>\"\n                },\n                {\n                  \"local-id\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"uuid\": \"<string>\",\n              \"fc-port\": [\n                {\n                  \"local-id\": \"<string>\"\n                },\n                {\n                  \"local-id\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"uuid\": \"<string>\",\n          \"forwarding-construct\": [\n            {\n              \"uuid\": \"<string>\",\n              \"fc-port\": [\n                {\n                  \"local-id\": \"<string>\"\n                },\n                {\n                  \"local-id\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"uuid\": \"<string>\",\n              \"fc-port\": [\n                {\n                  \"local-id\": \"<string>\"\n                },\n                {\n                  \"local-id\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/control-construct={{mountName}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"control-construct={{mountName}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "link={uuid}",
							"item": [
								{
									"name": "link-port{localId}",
									"item": [
										{
											"name": "Provides LinkPort from cache",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}/link-port{{localId}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"link={{uuid}}",
														"link-port{{localId}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"response": [
												{
													"name": "LinkPort provided from cache",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}/link-port{{localId}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"link={{uuid}}",
																"link-port{{localId}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "life-cycle-state",
															"value": "EXPERIMENTAL",
															"description": {
																"content": "'Life cycle state of the consumed service from {$RequestForCachedLinkPortCausesReadingFromCache.response.headers#life-cycle-state}'\n",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"core-model-1-4:link-port\": [\n    {\n      \"local-id\": \"<string>\"\n    },\n    {\n      \"local-id\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}/link-port{{localId}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"link={{uuid}}",
																"link-port{{localId}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}/link-port{{localId}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"link={{uuid}}",
																"link-port{{localId}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}/link-port{{localId}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"link={{uuid}}",
																"link-port{{localId}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}/link-port{{localId}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"link={{uuid}}",
																"link-port{{localId}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}/link-port{{localId}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"link={{uuid}}",
																"link-port{{localId}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Response in case of errored service requests from out of MW SDN domain",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}/link-port{{localId}}?fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"core-model-1-4:network-control-domain=cache",
																"link={{uuid}}",
																"link-port{{localId}}"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// Validate that the response code",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												]
											}
										}
									]
								},
								{
									"name": "Provides Link from cache",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Validate that the response code\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}?fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core-model-1-4:network-control-domain=cache",
												"link={{uuid}}"
											],
											"query": [
												{
													"key": "fields",
													"value": "<string>",
													"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
												}
											]
										}
									},
									"response": [
										{
											"name": "Link provided from cache",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"link={{uuid}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "life-cycle-state",
													"value": "EXPERIMENTAL",
													"description": {
														"content": "'Life cycle state of the consumed service from {$RequestForCachedLinkCausesReadingFromCache.response.headers#life-cycle-state}'\n",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"core-model-1-4:link\": [\n    {\n      \"uuid\": \"<string>\",\n      \"link-port\": [\n        {\n          \"local-id\": \"<string>\"\n        },\n        {\n          \"local-id\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"uuid\": \"<string>\",\n      \"link-port\": [\n        {\n          \"local-id\": \"<string>\"\n        },\n        {\n          \"local-id\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"link={{uuid}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"link={{uuid}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"link={{uuid}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"link={{uuid}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"link={{uuid}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Response in case of errored service requests from out of MW SDN domain",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core-model-1-4:network-control-domain=cache/link={{uuid}}?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core-model-1-4:network-control-domain=cache",
														"link={{uuid}}"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Query parameter to filter ressources according to RFC8040 fields filter spec"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Core",
			"item": [
				{
					"name": "core-model-1-4:control-construct",
					"item": [
						{
							"name": "logical-termination-point={uuid}",
							"item": [
								{
									"name": "layer-protocol=0",
									"item": [
										{
											"name": "operation-server-interface-1-0:operation-server-interface-pac",
											"item": [
												{
													"name": "operation-server-interface-capability",
													"item": [
														{
															"name": "operation-name",
															"item": [
																{
																	"name": "Returns operation name",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-server-interface-1-0:operation-server-interface-pac",
																				"operation-server-interface-capability",
																				"operation-name"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Operation name provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-capability",
																						"operation-name"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"operation-server-interface-1-0:operation-name\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-capability",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-capability",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-capability",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-capability",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-capability",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-capability/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-capability",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "operation-server-interface-configuration",
													"item": [
														{
															"name": "life-cycle-state",
															"item": [
																{
																	"name": "Returns the configured life cycle state of the operation",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-server-interface-1-0:operation-server-interface-pac",
																				"operation-server-interface-configuration",
																				"life-cycle-state"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Life cycle state provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"operation-server-interface-1-0:life-cycle-state\": \"operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Configures life cycle state",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"operation-server-interface-1-0:life-cycle-state\": \"operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-server-interface-1-0:operation-server-interface-pac",
																				"operation-server-interface-configuration",
																				"life-cycle-state"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Life cycle state configured",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:life-cycle-state\": \"operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:life-cycle-state\": \"operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:life-cycle-state\": \"operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:life-cycle-state\": \"operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:life-cycle-state\": \"operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:life-cycle-state\": \"operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:life-cycle-state\": \"operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_UNKNOWN\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "operation-key",
															"item": [
																{
																	"name": "Returns key for connecting",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-server-interface-1-0:operation-server-interface-pac",
																				"operation-server-interface-configuration",
																				"operation-key"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Operation key provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"operation-server-interface-1-0:operation-key\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Changes key for connecting",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"operation-server-interface-1-0:operation-key\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-server-interface-1-0:operation-server-interface-pac",
																				"operation-server-interface-configuration",
																				"operation-key"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Operation key changed",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-server-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-server-interface-1-0:operation-server-interface-pac/operation-server-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-server-interface-1-0:operation-server-interface-pac",
																						"operation-server-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "http-server-interface-1-0:http-server-interface-pac",
											"item": [
												{
													"name": "http-server-interface-capability",
													"item": [
														{
															"name": "application-name",
															"item": [
																{
																	"name": "Returns application name",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"http-server-interface-1-0:http-server-interface-pac",
																				"http-server-interface-capability",
																				"application-name"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Application name provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-name"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"http-server-interface-1-0:application-name\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-name"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-name"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-name"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-name"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "release-number",
															"item": [
																{
																	"name": "Returns release number",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"http-server-interface-1-0:http-server-interface-pac",
																				"http-server-interface-capability",
																				"release-number"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Release number provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-number"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"http-server-interface-1-0:release-number\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-number"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-number"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-number"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-number"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-number"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-number"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "application-purpose",
															"item": [
																{
																	"name": "Returns application purpose",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-purpose",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"http-server-interface-1-0:http-server-interface-pac",
																				"http-server-interface-capability",
																				"application-purpose"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Application purpose provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-purpose",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-purpose"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"http-server-interface-1-0:application-purpose\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-purpose",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-purpose"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-purpose",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-purpose"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-purpose",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-purpose"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-purpose",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-purpose"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-purpose",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-purpose"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/application-purpose",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"application-purpose"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "data-update-period",
															"item": [
																{
																	"name": "Returns update period",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/data-update-period",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"http-server-interface-1-0:http-server-interface-pac",
																				"http-server-interface-capability",
																				"data-update-period"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Update period provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/data-update-period",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"data-update-period"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"http-server-interface-1-0:data-update-period\": \"http-server-interface-1-0:DATA_UPDATE_PERIOD_TYPE_REAL_TIME\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/data-update-period",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"data-update-period"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/data-update-period",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"data-update-period"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/data-update-period",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"data-update-period"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/data-update-period",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"data-update-period"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/data-update-period",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"data-update-period"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/data-update-period",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"data-update-period"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "owner-name",
															"item": [
																{
																	"name": "Returns owner name",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-name",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"http-server-interface-1-0:http-server-interface-pac",
																				"http-server-interface-capability",
																				"owner-name"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Owner name provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-name"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"http-server-interface-1-0:owner-name\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-name"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-name"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-name"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-name"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "owner-email-address",
															"item": [
																{
																	"name": "Returns owner email address",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-email-address",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"http-server-interface-1-0:http-server-interface-pac",
																				"http-server-interface-capability",
																				"owner-email-address"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Email address of owner provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-email-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-email-address"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"http-server-interface-1-0:owner-email-address\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-email-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-email-address"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-email-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-email-address"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-email-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-email-address"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-email-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-email-address"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-email-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-email-address"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/owner-email-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"owner-email-address"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "release-list",
															"item": [
																{
																	"name": "Returns list of releases",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"http-server-interface-1-0:http-server-interface-pac",
																				"http-server-interface-capability",
																				"release-list"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "List of releases provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-list"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"http-server-interface-1-0:release-list\": [\n    {\n      \"local-id\": \"<string>\",\n      \"release-number\": \"<string>\",\n      \"release-date\": \"<string>\",\n      \"changes\": \"<string>\"\n    },\n    {\n      \"local-id\": \"<string>\",\n      \"release-number\": \"<string>\",\n      \"release-date\": \"<string>\",\n      \"changes\": \"<string>\"\n    }\n  ]\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-list"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-list"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-list"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-list"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-list"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-server-interface-1-0:http-server-interface-pac/http-server-interface-capability/release-list",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-server-interface-1-0:http-server-interface-pac",
																						"http-server-interface-capability",
																						"release-list"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "tcp-server-interface-1-0:tcp-server-interface-pac",
											"item": [
												{
													"name": "tcp-server-interface-configuration",
													"item": [
														{
															"name": "description",
															"item": [
																{
																	"name": "Returns Description of TcpServer",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-server-interface-1-0:tcp-server-interface-pac",
																				"tcp-server-interface-configuration",
																				"description"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Description provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"tcp-server-interface-1-0:description\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Documents Description of TcpServer",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"tcp-server-interface-1-0:description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-server-interface-1-0:tcp-server-interface-pac",
																				"tcp-server-interface-configuration",
																				"description"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Description documented",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:description\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:description\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:description\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:description\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:description\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:description\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:description\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/description",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"description"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "local-protocol",
															"item": [
																{
																	"name": "Returns Protocol of TcpServer",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-server-interface-1-0:tcp-server-interface-pac",
																				"tcp-server-interface-configuration",
																				"local-protocol"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Local protocol provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"tcp-server-interface-1-0:local-protocol\": \"tcp-server-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Documents Protocol of TcpServer",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"tcp-server-interface-1-0:local-protocol\": \"tcp-server-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-server-interface-1-0:tcp-server-interface-pac",
																				"tcp-server-interface-configuration",
																				"local-protocol"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Local protocol documented",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-protocol\": \"tcp-server-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-protocol\": \"tcp-server-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-protocol\": \"tcp-server-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-protocol\": \"tcp-server-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-protocol\": \"tcp-server-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-protocol\": \"tcp-server-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-protocol\": \"tcp-server-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-protocol"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "local-address",
															"item": [
																{
																	"name": "Returns address of the server",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-server-interface-1-0:tcp-server-interface-pac",
																				"tcp-server-interface-configuration",
																				"local-address"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Local address provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"tcp-server-interface-1-0:local-address\": {\n    \"ipv-4-address\": \"<string>\",\n    \"domain-name\": \"<string>\"\n  }\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Documents address of the server",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"tcp-server-interface-1-0:local-address\": {\n    \"ipv-4-address\": \"218.2.230.254\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-server-interface-1-0:tcp-server-interface-pac",
																				"tcp-server-interface-configuration",
																				"local-address"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Local IPv4 address documented",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-address\": {\n    \"ipv-4-address\": \"218.2.230.254\"\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-address\": {\n    \"ipv-4-address\": \"218.2.230.254\"\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-address\": {\n    \"ipv-4-address\": \"218.2.230.254\"\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-address\": {\n    \"ipv-4-address\": \"218.2.230.254\"\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-address\": {\n    \"ipv-4-address\": \"218.2.230.254\"\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-address\": {\n    \"ipv-4-address\": \"218.2.230.254\"\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-address\": {\n    \"ipv-4-address\": \"218.2.230.254\"\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-address"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "local-port",
															"item": [
																{
																	"name": "Returns TCP port of the server",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-server-interface-1-0:tcp-server-interface-pac",
																				"tcp-server-interface-configuration",
																				"local-port"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Local port provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"tcp-server-interface-1-0:local-port\": \"<integer>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Documents TCP port of the server",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"tcp-server-interface-1-0:local-port\": \"<integer>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-server-interface-1-0:tcp-server-interface-pac",
																				"tcp-server-interface-configuration",
																				"local-port"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Local port documented",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-server-interface-1-0:local-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-server-interface-1-0:tcp-server-interface-pac/tcp-server-interface-configuration/local-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-server-interface-1-0:tcp-server-interface-pac",
																						"tcp-server-interface-configuration",
																						"local-port"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "operation-client-interface-1-0:operation-client-interface-pac",
											"item": [
												{
													"name": "operation-client-interface-configuration",
													"item": [
														{
															"name": "operation-name",
															"item": [
																{
																	"name": "Returns operation name",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-client-interface-1-0:operation-client-interface-pac",
																				"operation-client-interface-configuration",
																				"operation-name"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Operation name provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"operation-client-interface-1-0:operation-name\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Configures operation name",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"operation-client-interface-1-0:operation-name\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-client-interface-1-0:operation-client-interface-pac",
																				"operation-client-interface-configuration",
																				"operation-name"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Operation name configured",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-name\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-name\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-name\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-name\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-name\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-name\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-name\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "operation-key",
															"item": [
																{
																	"name": "Returns key used for connecting to server.",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-client-interface-1-0:operation-client-interface-pac",
																				"operation-client-interface-configuration",
																				"operation-key"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Operation key provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"operation-client-interface-1-0:operation-key\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Configures key used for connecting to server.",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"operation-client-interface-1-0:operation-key\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-client-interface-1-0:operation-client-interface-pac",
																				"operation-client-interface-configuration",
																				"operation-key"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Operation key configured",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:operation-key\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-key",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"operation-key"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "detailed-logging-is-on",
															"item": [
																{
																	"name": "Returns detailed logging configuration.",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-client-interface-1-0:operation-client-interface-pac",
																				"operation-client-interface-configuration",
																				"detailed-logging-is-on"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Detailed logging configuration provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"operation-client-interface-1-0:detailed-logging-is-on\": \"<boolean>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Configures detailed logging on/off.",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"operation-client-interface-1-0:detailed-logging-is-on\": \"<boolean>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-client-interface-1-0:operation-client-interface-pac",
																				"operation-client-interface-configuration",
																				"detailed-logging-is-on"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Operation key configured",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:detailed-logging-is-on\": \"<boolean>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:detailed-logging-is-on\": \"<boolean>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:detailed-logging-is-on\": \"<boolean>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:detailed-logging-is-on\": \"<boolean>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:detailed-logging-is-on\": \"<boolean>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:detailed-logging-is-on\": \"<boolean>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"operation-client-interface-1-0:detailed-logging-is-on\": \"<boolean>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/detailed-logging-is-on",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-configuration",
																						"detailed-logging-is-on"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "operation-client-interface-status",
													"item": [
														{
															"name": "operational-state",
															"item": [
																{
																	"name": "Returns operational state of the operation",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/operational-state",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-client-interface-1-0:operation-client-interface-pac",
																				"operation-client-interface-status",
																				"operational-state"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Operational state provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/operational-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"operational-state"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"operation-client-interface-1-0:operational-state\": \"operation-client-interface-1-0:OPERATIONAL_STATE_TYPE_UNAVAILABLE\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/operational-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"operational-state"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/operational-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"operational-state"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/operational-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"operational-state"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/operational-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"operational-state"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/operational-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"operational-state"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/operational-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"operational-state"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "life-cycle-state",
															"item": [
																{
																	"name": "Returns life cycle state of the operation",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/life-cycle-state",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"operation-client-interface-1-0:operation-client-interface-pac",
																				"operation-client-interface-status",
																				"life-cycle-state"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Life cycle state provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"operation-client-interface-1-0:life-cycle-state\": \"operation-client-interface-1-0:LIFE_CYCLE_STATE_TYPE_OPERATIONAL\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-status/life-cycle-state",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"operation-client-interface-1-0:operation-client-interface-pac",
																						"operation-client-interface-status",
																						"life-cycle-state"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "http-client-interface-1-0:http-client-interface-pac",
											"item": [
												{
													"name": "http-client-interface-configuration",
													"item": [
														{
															"name": "application-name",
															"item": [
																{
																	"name": "Returns name of application to be addressed",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"http-client-interface-1-0:http-client-interface-pac",
																				"http-client-interface-configuration",
																				"application-name"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Addressed application provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"http-client-interface-1-0:application-name\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Configures name of application to be addressed",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"http-client-interface-1-0:application-name\": \"A72fnpcsgxzaGasbkf2aue1KzmvRv3necnmvzqlLyifqzpkQcadp7i4w1clL2e6g6twcsby\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"http-client-interface-1-0:http-client-interface-pac",
																				"http-client-interface-configuration",
																				"application-name"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Name of addressed application configured",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:application-name\": \"A72fnpcsgxzaGasbkf2aue1KzmvRv3necnmvzqlLyifqzpkQcadp7i4w1clL2e6g6twcsby\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:application-name\": \"A72fnpcsgxzaGasbkf2aue1KzmvRv3necnmvzqlLyifqzpkQcadp7i4w1clL2e6g6twcsby\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:application-name\": \"A72fnpcsgxzaGasbkf2aue1KzmvRv3necnmvzqlLyifqzpkQcadp7i4w1clL2e6g6twcsby\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:application-name\": \"A72fnpcsgxzaGasbkf2aue1KzmvRv3necnmvzqlLyifqzpkQcadp7i4w1clL2e6g6twcsby\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:application-name\": \"A72fnpcsgxzaGasbkf2aue1KzmvRv3necnmvzqlLyifqzpkQcadp7i4w1clL2e6g6twcsby\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:application-name\": \"A72fnpcsgxzaGasbkf2aue1KzmvRv3necnmvzqlLyifqzpkQcadp7i4w1clL2e6g6twcsby\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:application-name\": \"A72fnpcsgxzaGasbkf2aue1KzmvRv3necnmvzqlLyifqzpkQcadp7i4w1clL2e6g6twcsby\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/application-name",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"application-name"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "release-number",
															"item": [
																{
																	"name": "Returns release number of application to be addressed",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"http-client-interface-1-0:http-client-interface-pac",
																				"http-client-interface-configuration",
																				"release-number"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Release number provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"http-client-interface-1-0:release-number\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Configures release number of application to be addressed",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"http-client-interface-1-0:release-number\": \"9.22.1\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"http-client-interface-1-0:http-client-interface-pac",
																				"http-client-interface-configuration",
																				"release-number"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Release number configured",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:release-number\": \"9.22.1\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:release-number\": \"9.22.1\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:release-number\": \"9.22.1\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:release-number\": \"9.22.1\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:release-number\": \"9.22.1\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:release-number\": \"9.22.1\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"http-client-interface-1-0:release-number\": \"9.22.1\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/http-client-interface-1-0:http-client-interface-pac/http-client-interface-configuration/release-number",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"http-client-interface-1-0:http-client-interface-pac",
																						"http-client-interface-configuration",
																						"release-number"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "tcp-client-interface-1-0:tcp-client-interface-pac",
											"item": [
												{
													"name": "tcp-client-interface-configuration",
													"item": [
														{
															"name": "remote-protocol",
															"item": [
																{
																	"name": "Returns protocol for addressing remote side",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-client-interface-1-0:tcp-client-interface-pac",
																				"tcp-client-interface-configuration",
																				"remote-protocol"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Protocol for addressing remote side provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"tcp-client-interface-1-0:remote-protocol\": \"tcp-client-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Configures protocol for addressing remote side",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"tcp-client-interface-1-0:remote-protocol\": \"tcp-client-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-client-interface-1-0:tcp-client-interface-pac",
																				"tcp-client-interface-configuration",
																				"remote-protocol"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Protocol for addressing remote side configured",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-protocol\": \"tcp-client-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-protocol\": \"tcp-client-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-protocol\": \"tcp-client-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-protocol\": \"tcp-client-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-protocol\": \"tcp-client-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-protocol\": \"tcp-client-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-protocol\": \"tcp-client-interface-1-0:PROTOCOL_TYPE_HTTP\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-protocol"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "remote-address",
															"item": [
																{
																	"name": "Returns remote address",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-client-interface-1-0:tcp-client-interface-pac",
																				"tcp-client-interface-configuration",
																				"remote-address"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Remote address provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"tcp-client-interface-1-0:remote-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"<string>\"\n    },\n    \"domain-name\": \"<string>\"\n  }\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Configures remote address",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"tcp-client-interface-1-0:remote-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"238.6.0.255\"\n    }\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-client-interface-1-0:tcp-client-interface-pac",
																				"tcp-client-interface-configuration",
																				"remote-address"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Remote IPv4 address configured",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"238.6.0.255\"\n    }\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"238.6.0.255\"\n    }\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"238.6.0.255\"\n    }\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"238.6.0.255\"\n    }\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"238.6.0.255\"\n    }\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"238.6.0.255\"\n    }\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-address\": {\n    \"ip-address\": {\n      \"ipv-4-address\": \"238.6.0.255\"\n    }\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-address"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "remote-port",
															"item": [
																{
																	"name": "Returns target TCP port at server",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-client-interface-1-0:tcp-client-interface-pac",
																				"tcp-client-interface-configuration",
																				"remote-port"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Remote port provided",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"tcp-client-interface-1-0:remote-port\": \"<integer>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																},
																{
																	"name": "Configures target TCP port at server",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"tcp-client-interface-1-0:remote-port\": \"<integer>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"core-model-1-4:control-construct",
																				"logical-termination-point={{uuid}}",
																				"layer-protocol=0",
																				"tcp-client-interface-1-0:tcp-client-interface-pac",
																				"tcp-client-interface-configuration",
																				"remote-port"
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Remote port configured",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Response in case of errored OaM requests",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"tcp-client-interface-1-0:remote-port\": \"<integer>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/core-model-1-4:control-construct/logical-termination-point={{uuid}}/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"core-model-1-4:control-construct",
																						"logical-termination-point={{uuid}}",
																						"layer-protocol=0",
																						"tcp-client-interface-1-0:tcp-client-interface-pac",
																						"tcp-client-interface-configuration",
																						"remote-port"
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Returns entire data tree",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core-model-1-4:control-construct",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core-model-1-4:control-construct"
									]
								}
							},
							"response": [
								{
									"name": "ControlConstruct provided",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core-model-1-4:control-construct",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core-model-1-4:control-construct"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"core-model-1-4:control-construct\": {\n    \"uuid\": \"lq-58-0946755624-66501711\",\n    \"profile-collection\": {\n      \"profile\": [\n        {\n          \"uuid\": \"<string>\",\n          \"profile-name\": \"string-profile-1-0:PROFILE_NAME_TYPE_STRING_PROFILE\",\n          \"action-profile-1-0:action-profile-pac\": {\n            \"action-profile-capability\": {\n              \"operation-name\": \"<string>\",\n              \"label\": \"<string>\",\n              \"display-in-new-browser-window\": \"<boolean>\",\n              \"input-value-list\": [\n                {\n                  \"field-name\": \"<string>\",\n                  \"unit\": \"<string>\"\n                },\n                {\n                  \"field-name\": \"<string>\",\n                  \"unit\": \"<string>\"\n                }\n              ]\n            },\n            \"action-profile-configuration\": {\n              \"consequent-operation-reference\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"uuid\": \"<string>\",\n          \"profile-name\": \"file-profile-1-0:PROFILE_NAME_TYPE_FILE_PROFILE\",\n          \"action-profile-1-0:action-profile-pac\": {\n            \"action-profile-capability\": {\n              \"operation-name\": \"<string>\",\n              \"label\": \"<string>\",\n              \"display-in-new-browser-window\": \"<boolean>\",\n              \"input-value-list\": [\n                {\n                  \"field-name\": \"<string>\",\n                  \"unit\": \"<string>\"\n                },\n                {\n                  \"field-name\": \"<string>\",\n                  \"unit\": \"<string>\"\n                }\n              ]\n            },\n            \"action-profile-configuration\": {\n              \"consequent-operation-reference\": \"<string>\"\n            }\n          }\n        }\n      ]\n    },\n    \"logical-termination-point\": [\n      {\n        \"uuid\": \"<string>\",\n        \"ltp-direction\": \"core-model-1-4:TERMINATION_DIRECTION_SINK\",\n        \"client-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"server-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"layer-protocol\": [\n          {\n            \"local-id\": \"<string>\",\n            \"layer-protocol-name\": \"elasticsearch-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_ELASTICSEARCH_LAYER\",\n            \"operation-server-interface-1-0:operation-server-interface-pac\": {\n              \"operation-server-interface-capability\": {\n                \"operation-name\": \"<string>\"\n              },\n              \"operation-server-interface-configuration\": {\n                \"life-cycle-state\": \"operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_OBSOLETE\",\n                \"operation-key\": \"<string>\"\n              }\n            }\n          }\n        ]\n      },\n      {\n        \"uuid\": \"<string>\",\n        \"ltp-direction\": \"core-model-1-4:TERMINATION_DIRECTION_BIDIRECTIONAL\",\n        \"client-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"server-ltp\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"layer-protocol\": [\n          {\n            \"local-id\": \"<string>\",\n            \"layer-protocol-name\": \"elasticsearch-client-interface-1-0:LAYER_PROTOCOL_NAME_TYPE_ELASTICSEARCH_LAYER\",\n            \"operation-server-interface-1-0:operation-server-interface-pac\": {\n              \"operation-server-interface-capability\": {\n                \"operation-name\": \"<string>\"\n              },\n              \"operation-server-interface-configuration\": {\n                \"life-cycle-state\": \"operation-server-interface-1-0:LIFE_CYCLE_STATE_TYPE_EXPERIMENTAL\",\n                \"operation-key\": \"<string>\"\n              }\n            }\n          }\n        ]\n      }\n    ],\n    \"forwarding-domain\": [\n      {\n        \"uuid\": \"<string>\",\n        \"forwarding-construct\": [\n          {\n            \"uuid\": \"<string>\",\n            \"name\": [\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"fc-port\": [\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"core-model-1-4:PORT_DIRECTION_TYPE_OUTPUT\",\n                \"logical-termination-point\": \"<string>\"\n              },\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"core-model-1-4:PORT_DIRECTION_TYPE_MANAGEMENT\",\n                \"logical-termination-point\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"uuid\": \"<string>\",\n            \"name\": [\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"value-name\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"fc-port\": [\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"core-model-1-4:PORT_DIRECTION_TYPE_INPUT\",\n                \"logical-termination-point\": \"<string>\"\n              },\n              {\n                \"local-id\": \"<string>\",\n                \"port-direction\": \"core-model-1-4:PORT_DIRECTION_TYPE_INPUT\",\n                \"logical-termination-point\": \"<string>\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Response in case of errored OaM requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core-model-1-4:control-construct",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core-model-1-4:control-construct"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored OaM requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core-model-1-4:control-construct",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core-model-1-4:control-construct"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored OaM requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core-model-1-4:control-construct",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core-model-1-4:control-construct"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored OaM requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core-model-1-4:control-construct",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core-model-1-4:control-construct"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored OaM requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core-model-1-4:control-construct",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core-model-1-4:control-construct"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Response in case of errored OaM requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core-model-1-4:control-construct",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core-model-1-4:control-construct"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Validate that the response code",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								]
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://linkvis-staging-01:4011",
			"type": "string",
			"disabled": true
		},
		{
			"key": "basicAuthUsername",
			"value": "admin",
			"type": "string"
		},
		{
			"key": "basicAuthPassword",
			"value": "admin@123",
			"type": "string"
		},
		{
			"key": "apiKeyInitial",
			"value": "Operation key not yet provided.",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "http://localhost:3009",
			"type": "string",
			"disabled": true
		},
		{
			"key": "baseUrl",
			"value": "http://localhost:9093",
			"type": "string"
		}
	]
}